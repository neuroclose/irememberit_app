{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.processFillBlankQuestion = processFillBlankQuestion;\n  exports.checkFillBlankAnswers = checkFillBlankAnswers;\n  /**\n   * Fill-in-the-Blank Question Processor\n   * Handles word removal and choice generation based on stage progression\n   */\n\n  /**\n   * Calculate the percentage of words to remove based on stage\n   * Ensures at least one additional word is removed each stage\n   */\n  function getRemovalPercentage(stage) {\n    // Stage 1: 10-15%, Stage 2: 20-25%, ..., Stage 9: 90-95%\n    const basePercentage = stage * 10;\n    const variance = Math.random() * 5;\n    return Math.min(basePercentage + variance, 95);\n  }\n\n  /**\n   * Calculate minimum number of words to remove for a stage\n   * Ensures progressive difficulty\n   */\n  function getMinimumWordsToRemove(stage, totalWords) {\n    // At least 1 word per stage, but respect total word count\n    const minWords = Math.ceil(stage * 0.5) + 1;\n    const percentageWords = Math.ceil(totalWords * stage * 10 / 100);\n    return Math.min(Math.max(minWords, percentageWords), totalWords);\n  }\n\n  /**\n   * Generate decoy words that are similar but incorrect\n   */\n  function generateDecoys(correctWord, allWords, count = 3) {\n    const decoys = [];\n    const usedWords = new Set([correctWord.toLowerCase()]);\n\n    // Filter out the correct word and get candidates\n    const candidates = allWords.filter(w => w.toLowerCase() !== correctWord.toLowerCase() && w.length > 2 // Avoid very short words as decoys\n    );\n\n    // If we have common words list, prioritize those\n    const commonWords = ['the', 'a', 'is', 'are', 'was', 'were', 'have', 'has', 'do', 'does', 'you', 'your', 'my', 'their', 'his', 'her', 'it', 'this', 'that', 'these', 'those', 'can', 'could', 'would', 'should', 'will', 'may', 'might', 'must', 'need', 'want'];\n\n    // Try to get words with similar length first\n    const similarLength = candidates.filter(w => Math.abs(w.length - correctWord.length) <= 2);\n\n    // Shuffle and pick decoys\n    const pool = [...similarLength, ...candidates, ...commonWords].filter(w => !usedWords.has(w.toLowerCase()));\n    for (let i = 0; i < pool.length && decoys.length < count; i++) {\n      const randomIndex = Math.floor(Math.random() * pool.length);\n      const word = pool.splice(randomIndex, 1)[0];\n      if (word && !usedWords.has(word.toLowerCase())) {\n        decoys.push(word);\n        usedWords.add(word.toLowerCase());\n      }\n    }\n\n    // If we don't have enough decoys, generate simple variations\n    while (decoys.length < count) {\n      const variation = correctWord + (decoys.length + 1);\n      if (!usedWords.has(variation.toLowerCase())) {\n        decoys.push(variation);\n        usedWords.add(variation.toLowerCase());\n      }\n    }\n    return decoys;\n  }\n\n  /**\n   * Process a text phrase into a fill-in-blank question\n   */\n  function processFillBlankQuestion(originalText, stage, allModuleWords) {\n    // Clean and split the text into words\n    const cleanText = originalText.trim();\n    const words = cleanText.split(/\\s+/);\n    const totalWords = words.length;\n    if (totalWords === 0) {\n      return {\n        displayText: cleanText,\n        blanks: [],\n        stage,\n        originalText: cleanText,\n        correctAnswers: {}\n      };\n    }\n\n    // Calculate how many words to remove\n    const removalPercentage = getRemovalPercentage(stage);\n    const minWordsToRemove = getMinimumWordsToRemove(stage, totalWords);\n    const wordsToRemove = Math.max(Math.ceil(totalWords * removalPercentage / 100), minWordsToRemove);\n\n    // Randomly select which words to remove (avoid removing all words)\n    const maxRemovable = Math.max(1, totalWords - 1);\n    const actualWordsToRemove = Math.min(wordsToRemove, maxRemovable);\n\n    // Create array of word indices and shuffle\n    const wordIndices = Array.from({\n      length: totalWords\n    }, (_, i) => i);\n\n    // Fisher-Yates shuffle\n    for (let i = wordIndices.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [wordIndices[i], wordIndices[j]] = [wordIndices[j], wordIndices[i]];\n    }\n\n    // Select indices to remove\n    const indicesToRemove = wordIndices.slice(0, actualWordsToRemove).sort((a, b) => a - b);\n\n    // Build the display text and blanks info\n    const blanks = [];\n    const correctAnswers = {};\n    let displayText = '';\n    let currentBlankIndex = 0;\n\n    // Use module words or extract from text for decoy generation\n    const decoyPool = allModuleWords && allModuleWords.length > 0 ? allModuleWords : words;\n    for (let i = 0; i < words.length; i++) {\n      const word = words[i];\n      const isBlank = indicesToRemove.includes(i);\n      if (isBlank) {\n        // This word should be a blank\n        const correctAnswer = word;\n        const decoys = generateDecoys(correctAnswer, decoyPool, 3);\n        const allChoices = [correctAnswer, ...decoys];\n\n        // Shuffle choices\n        for (let j = allChoices.length - 1; j > 0; j--) {\n          const k = Math.floor(Math.random() * (j + 1));\n          [allChoices[j], allChoices[k]] = [allChoices[k], allChoices[j]];\n        }\n        blanks.push({\n          index: currentBlankIndex,\n          correctAnswer,\n          choices: allChoices\n        });\n        correctAnswers[currentBlankIndex] = correctAnswer;\n        displayText += '___';\n        currentBlankIndex++;\n      } else {\n        // This word is visible\n        displayText += word;\n      }\n\n      // Add space after each word except the last\n      if (i < words.length - 1) {\n        displayText += ' ';\n      }\n    }\n    return {\n      displayText,\n      blanks,\n      stage,\n      originalText: cleanText,\n      correctAnswers\n    };\n  }\n\n  /**\n   * Check if the user's answers are correct\n   */\n  function checkFillBlankAnswers(processedQuestion, userAnswers) {\n    const totalBlanks = processedQuestion.blanks.length;\n    let correctCount = 0;\n    processedQuestion.blanks.forEach(blank => {\n      const userAnswer = userAnswers[blank.index];\n      if (userAnswer && userAnswer.toLowerCase() === blank.correctAnswer.toLowerCase()) {\n        correctCount++;\n      }\n    });\n    const accuracy = totalBlanks > 0 ? correctCount / totalBlanks * 100 : 0;\n    const correct = correctCount === totalBlanks;\n\n    // Calculate points based on accuracy and stage\n    const basePoints = 10;\n    const stageMultiplier = processedQuestion.stage;\n    const pointsEarned = correct ? Math.round(basePoints * stageMultiplier * (accuracy / 100)) : 0;\n    return {\n      correct,\n      accuracy,\n      correctAnswers: processedQuestion.correctAnswers,\n      pointsEarned\n    };\n  }\n});","lineCount":191,"map":[[7,2,93,0,"exports"],[7,9,93,0],[7,10,93,0,"processFillBlankQuestion"],[7,34,93,0],[7,37,93,0,"processFillBlankQuestion"],[7,61,93,0],[8,2,196,0,"exports"],[8,9,196,0],[8,10,196,0,"checkFillBlankAnswers"],[8,31,196,0],[8,34,196,0,"checkFillBlankAnswers"],[8,55,196,0],[9,2,1,0],[10,0,2,0],[11,0,3,0],[12,0,4,0],[14,2,20,0],[15,0,21,0],[16,0,22,0],[17,0,23,0],[18,2,24,0],[18,11,24,9,"getRemovalPercentage"],[18,31,24,29,"getRemovalPercentage"],[18,32,24,30,"stage"],[18,37,24,43],[18,39,24,53],[19,4,25,2],[20,4,26,2],[20,10,26,8,"basePercentage"],[20,24,26,22],[20,27,26,25,"stage"],[20,32,26,30],[20,35,26,33],[20,37,26,35],[21,4,27,2],[21,10,27,8,"variance"],[21,18,27,16],[21,21,27,19,"Math"],[21,25,27,23],[21,26,27,24,"random"],[21,32,27,30],[21,33,27,31],[21,34,27,32],[21,37,27,35],[21,38,27,36],[22,4,28,2],[22,11,28,9,"Math"],[22,15,28,13],[22,16,28,14,"min"],[22,19,28,17],[22,20,28,18,"basePercentage"],[22,34,28,32],[22,37,28,35,"variance"],[22,45,28,43],[22,47,28,45],[22,49,28,47],[22,50,28,48],[23,2,29,0],[25,2,31,0],[26,0,32,0],[27,0,33,0],[28,0,34,0],[29,2,35,0],[29,11,35,9,"getMinimumWordsToRemove"],[29,34,35,32,"getMinimumWordsToRemove"],[29,35,35,33,"stage"],[29,40,35,46],[29,42,35,48,"totalWords"],[29,52,35,66],[29,54,35,76],[30,4,36,2],[31,4,37,2],[31,10,37,8,"minWords"],[31,18,37,16],[31,21,37,19,"Math"],[31,25,37,23],[31,26,37,24,"ceil"],[31,30,37,28],[31,31,37,29,"stage"],[31,36,37,34],[31,39,37,37],[31,42,37,40],[31,43,37,41],[31,46,37,44],[31,47,37,45],[32,4,38,2],[32,10,38,8,"percentageWords"],[32,25,38,23],[32,28,38,26,"Math"],[32,32,38,30],[32,33,38,31,"ceil"],[32,37,38,35],[32,38,38,37,"totalWords"],[32,48,38,47],[32,51,38,50,"stage"],[32,56,38,55],[32,59,38,58],[32,61,38,60],[32,64,38,64],[32,67,38,67],[32,68,38,68],[33,4,39,2],[33,11,39,9,"Math"],[33,15,39,13],[33,16,39,14,"min"],[33,19,39,17],[33,20,39,18,"Math"],[33,24,39,22],[33,25,39,23,"max"],[33,28,39,26],[33,29,39,27,"minWords"],[33,37,39,35],[33,39,39,37,"percentageWords"],[33,54,39,52],[33,55,39,53],[33,57,39,55,"totalWords"],[33,67,39,65],[33,68,39,66],[34,2,40,0],[36,2,42,0],[37,0,43,0],[38,0,44,0],[39,2,45,0],[39,11,45,9,"generateDecoys"],[39,25,45,23,"generateDecoys"],[39,26,45,24,"correctWord"],[39,37,45,43],[39,39,45,45,"allWords"],[39,47,45,63],[39,49,45,65,"count"],[39,54,45,78],[39,57,45,81],[39,58,45,82],[39,60,45,94],[40,4,46,2],[40,10,46,8,"decoys"],[40,16,46,24],[40,19,46,27],[40,21,46,29],[41,4,47,2],[41,10,47,8,"usedWords"],[41,19,47,17],[41,22,47,20],[41,26,47,24,"Set"],[41,29,47,27],[41,30,47,36],[41,31,47,37,"correctWord"],[41,42,47,48],[41,43,47,49,"toLowerCase"],[41,54,47,60],[41,55,47,61],[41,56,47,62],[41,57,47,63],[41,58,47,64],[43,4,49,2],[44,4,50,2],[44,10,50,8,"candidates"],[44,20,50,18],[44,23,50,21,"allWords"],[44,31,50,29],[44,32,50,30,"filter"],[44,38,50,36],[44,39,50,37,"w"],[44,40,50,38],[44,44,51,4,"w"],[44,45,51,5],[44,46,51,6,"toLowerCase"],[44,57,51,17],[44,58,51,18],[44,59,51,19],[44,64,51,24,"correctWord"],[44,75,51,35],[44,76,51,36,"toLowerCase"],[44,87,51,47],[44,88,51,48],[44,89,51,49],[44,93,52,4,"w"],[44,94,52,5],[44,95,52,6,"length"],[44,101,52,12],[44,104,52,15],[44,105,52,16],[44,106,52,17],[45,4,53,2],[45,5,53,3],[47,4,55,2],[48,4,56,2],[48,10,56,8,"commonWords"],[48,21,56,19],[48,24,56,22],[48,25,56,23],[48,30,56,28],[48,32,56,30],[48,35,56,33],[48,37,56,35],[48,41,56,39],[48,43,56,41],[48,48,56,46],[48,50,56,48],[48,55,56,53],[48,57,56,55],[48,63,56,61],[48,65,56,63],[48,71,56,69],[48,73,56,71],[48,78,56,76],[48,80,56,78],[48,84,56,82],[48,86,56,84],[48,92,56,90],[48,94,57,4],[48,99,57,9],[48,101,57,11],[48,107,57,17],[48,109,57,19],[48,113,57,23],[48,115,57,25],[48,122,57,32],[48,124,57,34],[48,129,57,39],[48,131,57,41],[48,136,57,46],[48,138,57,48],[48,142,57,52],[48,144,57,54],[48,150,57,60],[48,152,57,62],[48,158,57,68],[48,160,57,70],[48,167,57,77],[48,169,57,79],[48,176,57,86],[48,178,58,4],[48,183,58,9],[48,185,58,11],[48,192,58,18],[48,194,58,20],[48,201,58,27],[48,203,58,29],[48,211,58,37],[48,213,58,39],[48,219,58,45],[48,221,58,47],[48,226,58,52],[48,228,58,54],[48,235,58,61],[48,237,58,63],[48,243,58,69],[48,245,58,71],[48,251,58,77],[48,253,58,79],[48,259,58,85],[48,260,58,86],[50,4,60,2],[51,4,61,2],[51,10,61,8,"similarLength"],[51,23,61,21],[51,26,61,24,"candidates"],[51,36,61,34],[51,37,61,35,"filter"],[51,43,61,41],[51,44,61,42,"w"],[51,45,61,43],[51,49,62,4,"Math"],[51,53,62,8],[51,54,62,9,"abs"],[51,57,62,12],[51,58,62,13,"w"],[51,59,62,14],[51,60,62,15,"length"],[51,66,62,21],[51,69,62,24,"correctWord"],[51,80,62,35],[51,81,62,36,"length"],[51,87,62,42],[51,88,62,43],[51,92,62,47],[51,93,63,2],[51,94,63,3],[53,4,65,2],[54,4,66,2],[54,10,66,8,"pool"],[54,14,66,12],[54,17,66,15],[54,18,66,16],[54,21,66,19,"similarLength"],[54,34,66,32],[54,36,66,34],[54,39,66,37,"candidates"],[54,49,66,47],[54,51,66,49],[54,54,66,52,"commonWords"],[54,65,66,63],[54,66,66,64],[54,67,67,5,"filter"],[54,73,67,11],[54,74,67,12,"w"],[54,75,67,13],[54,79,67,17],[54,80,67,18,"usedWords"],[54,89,67,27],[54,90,67,28,"has"],[54,93,67,31],[54,94,67,32,"w"],[54,95,67,33],[54,96,67,34,"toLowerCase"],[54,107,67,45],[54,108,67,46],[54,109,67,47],[54,110,67,48],[54,111,67,49],[55,4,69,2],[55,9,69,7],[55,13,69,11,"i"],[55,14,69,12],[55,17,69,15],[55,18,69,16],[55,20,69,18,"i"],[55,21,69,19],[55,24,69,22,"pool"],[55,28,69,26],[55,29,69,27,"length"],[55,35,69,33],[55,39,69,37,"decoys"],[55,45,69,43],[55,46,69,44,"length"],[55,52,69,50],[55,55,69,53,"count"],[55,60,69,58],[55,62,69,60,"i"],[55,63,69,61],[55,65,69,63],[55,67,69,65],[56,6,70,4],[56,12,70,10,"randomIndex"],[56,23,70,21],[56,26,70,24,"Math"],[56,30,70,28],[56,31,70,29,"floor"],[56,36,70,34],[56,37,70,35,"Math"],[56,41,70,39],[56,42,70,40,"random"],[56,48,70,46],[56,49,70,47],[56,50,70,48],[56,53,70,51,"pool"],[56,57,70,55],[56,58,70,56,"length"],[56,64,70,62],[56,65,70,63],[57,6,71,4],[57,12,71,10,"word"],[57,16,71,14],[57,19,71,17,"pool"],[57,23,71,21],[57,24,71,22,"splice"],[57,30,71,28],[57,31,71,29,"randomIndex"],[57,42,71,40],[57,44,71,42],[57,45,71,43],[57,46,71,44],[57,47,71,45],[57,48,71,46],[57,49,71,47],[58,6,72,4],[58,10,72,8,"word"],[58,14,72,12],[58,18,72,16],[58,19,72,17,"usedWords"],[58,28,72,26],[58,29,72,27,"has"],[58,32,72,30],[58,33,72,31,"word"],[58,37,72,35],[58,38,72,36,"toLowerCase"],[58,49,72,47],[58,50,72,48],[58,51,72,49],[58,52,72,50],[58,54,72,52],[59,8,73,6,"decoys"],[59,14,73,12],[59,15,73,13,"push"],[59,19,73,17],[59,20,73,18,"word"],[59,24,73,22],[59,25,73,23],[60,8,74,6,"usedWords"],[60,17,74,15],[60,18,74,16,"add"],[60,21,74,19],[60,22,74,20,"word"],[60,26,74,24],[60,27,74,25,"toLowerCase"],[60,38,74,36],[60,39,74,37],[60,40,74,38],[60,41,74,39],[61,6,75,4],[62,4,76,2],[64,4,78,2],[65,4,79,2],[65,11,79,9,"decoys"],[65,17,79,15],[65,18,79,16,"length"],[65,24,79,22],[65,27,79,25,"count"],[65,32,79,30],[65,34,79,32],[66,6,80,4],[66,12,80,10,"variation"],[66,21,80,19],[66,24,80,22,"correctWord"],[66,35,80,33],[66,39,80,37,"decoys"],[66,45,80,43],[66,46,80,44,"length"],[66,52,80,50],[66,55,80,53],[66,56,80,54],[66,57,80,55],[67,6,81,4],[67,10,81,8],[67,11,81,9,"usedWords"],[67,20,81,18],[67,21,81,19,"has"],[67,24,81,22],[67,25,81,23,"variation"],[67,34,81,32],[67,35,81,33,"toLowerCase"],[67,46,81,44],[67,47,81,45],[67,48,81,46],[67,49,81,47],[67,51,81,49],[68,8,82,6,"decoys"],[68,14,82,12],[68,15,82,13,"push"],[68,19,82,17],[68,20,82,18,"variation"],[68,29,82,27],[68,30,82,28],[69,8,83,6,"usedWords"],[69,17,83,15],[69,18,83,16,"add"],[69,21,83,19],[69,22,83,20,"variation"],[69,31,83,29],[69,32,83,30,"toLowerCase"],[69,43,83,41],[69,44,83,42],[69,45,83,43],[69,46,83,44],[70,6,84,4],[71,4,85,2],[72,4,87,2],[72,11,87,9,"decoys"],[72,17,87,15],[73,2,88,0],[75,2,90,0],[76,0,91,0],[77,0,92,0],[78,2,93,7],[78,11,93,16,"processFillBlankQuestion"],[78,35,93,40,"processFillBlankQuestion"],[78,36,94,2,"originalText"],[78,48,94,22],[78,50,95,2,"stage"],[78,55,95,15],[78,57,96,2,"allModuleWords"],[78,71,96,27],[78,73,97,21],[79,4,98,2],[80,4,99,2],[80,10,99,8,"cleanText"],[80,19,99,17],[80,22,99,20,"originalText"],[80,34,99,32],[80,35,99,33,"trim"],[80,39,99,37],[80,40,99,38],[80,41,99,39],[81,4,100,2],[81,10,100,8,"words"],[81,15,100,13],[81,18,100,16,"cleanText"],[81,27,100,25],[81,28,100,26,"split"],[81,33,100,31],[81,34,100,32],[81,39,100,37],[81,40,100,38],[82,4,101,2],[82,10,101,8,"totalWords"],[82,20,101,18],[82,23,101,21,"words"],[82,28,101,26],[82,29,101,27,"length"],[82,35,101,33],[83,4,103,2],[83,8,103,6,"totalWords"],[83,18,103,16],[83,23,103,21],[83,24,103,22],[83,26,103,24],[84,6,104,4],[84,13,104,11],[85,8,105,6,"displayText"],[85,19,105,17],[85,21,105,19,"cleanText"],[85,30,105,28],[86,8,106,6,"blanks"],[86,14,106,12],[86,16,106,14],[86,18,106,16],[87,8,107,6,"stage"],[87,13,107,11],[88,8,108,6,"originalText"],[88,20,108,18],[88,22,108,20,"cleanText"],[88,31,108,29],[89,8,109,6,"correctAnswers"],[89,22,109,20],[89,24,109,22],[89,25,109,23],[90,6,110,4],[90,7,110,5],[91,4,111,2],[93,4,113,2],[94,4,114,2],[94,10,114,8,"removalPercentage"],[94,27,114,25],[94,30,114,28,"getRemovalPercentage"],[94,50,114,48],[94,51,114,49,"stage"],[94,56,114,54],[94,57,114,55],[95,4,115,2],[95,10,115,8,"minWordsToRemove"],[95,26,115,24],[95,29,115,27,"getMinimumWordsToRemove"],[95,52,115,50],[95,53,115,51,"stage"],[95,58,115,56],[95,60,115,58,"totalWords"],[95,70,115,68],[95,71,115,69],[96,4,116,2],[96,10,116,8,"wordsToRemove"],[96,23,116,21],[96,26,116,24,"Math"],[96,30,116,28],[96,31,116,29,"max"],[96,34,116,32],[96,35,117,4,"Math"],[96,39,117,8],[96,40,117,9,"ceil"],[96,44,117,13],[96,45,117,15,"totalWords"],[96,55,117,25],[96,58,117,28,"removalPercentage"],[96,75,117,45],[96,78,117,49],[96,81,117,52],[96,82,117,53],[96,84,118,4,"minWordsToRemove"],[96,100,119,2],[96,101,119,3],[98,4,121,2],[99,4,122,2],[99,10,122,8,"maxRemovable"],[99,22,122,20],[99,25,122,23,"Math"],[99,29,122,27],[99,30,122,28,"max"],[99,33,122,31],[99,34,122,32],[99,35,122,33],[99,37,122,35,"totalWords"],[99,47,122,45],[99,50,122,48],[99,51,122,49],[99,52,122,50],[100,4,123,2],[100,10,123,8,"actualWordsToRemove"],[100,29,123,27],[100,32,123,30,"Math"],[100,36,123,34],[100,37,123,35,"min"],[100,40,123,38],[100,41,123,39,"wordsToRemove"],[100,54,123,52],[100,56,123,54,"maxRemovable"],[100,68,123,66],[100,69,123,67],[102,4,125,2],[103,4,126,2],[103,10,126,8,"wordIndices"],[103,21,126,19],[103,24,126,22,"Array"],[103,29,126,27],[103,30,126,28,"from"],[103,34,126,32],[103,35,126,33],[104,6,126,35,"length"],[104,12,126,41],[104,14,126,43,"totalWords"],[105,4,126,54],[105,5,126,55],[105,7,126,57],[105,8,126,58,"_"],[105,9,126,59],[105,11,126,61,"i"],[105,12,126,62],[105,17,126,67,"i"],[105,18,126,68],[105,19,126,69],[107,4,128,2],[108,4,129,2],[108,9,129,7],[108,13,129,11,"i"],[108,14,129,12],[108,17,129,15,"wordIndices"],[108,28,129,26],[108,29,129,27,"length"],[108,35,129,33],[108,38,129,36],[108,39,129,37],[108,41,129,39,"i"],[108,42,129,40],[108,45,129,43],[108,46,129,44],[108,48,129,46,"i"],[108,49,129,47],[108,51,129,49],[108,53,129,51],[109,6,130,4],[109,12,130,10,"j"],[109,13,130,11],[109,16,130,14,"Math"],[109,20,130,18],[109,21,130,19,"floor"],[109,26,130,24],[109,27,130,25,"Math"],[109,31,130,29],[109,32,130,30,"random"],[109,38,130,36],[109,39,130,37],[109,40,130,38],[109,44,130,42,"i"],[109,45,130,43],[109,48,130,46],[109,49,130,47],[109,50,130,48],[109,51,130,49],[110,6,131,4],[110,7,131,5,"wordIndices"],[110,18,131,16],[110,19,131,17,"i"],[110,20,131,18],[110,21,131,19],[110,23,131,21,"wordIndices"],[110,34,131,32],[110,35,131,33,"j"],[110,36,131,34],[110,37,131,35],[110,38,131,36],[110,41,131,39],[110,42,131,40,"wordIndices"],[110,53,131,51],[110,54,131,52,"j"],[110,55,131,53],[110,56,131,54],[110,58,131,56,"wordIndices"],[110,69,131,67],[110,70,131,68,"i"],[110,71,131,69],[110,72,131,70],[110,73,131,71],[111,4,132,2],[113,4,134,2],[114,4,135,2],[114,10,135,8,"indicesToRemove"],[114,25,135,23],[114,28,135,26,"wordIndices"],[114,39,135,37],[114,40,135,38,"slice"],[114,45,135,43],[114,46,135,44],[114,47,135,45],[114,49,135,47,"actualWordsToRemove"],[114,68,135,66],[114,69,135,67],[114,70,135,68,"sort"],[114,74,135,72],[114,75,135,73],[114,76,135,74,"a"],[114,77,135,75],[114,79,135,77,"b"],[114,80,135,78],[114,85,135,83,"a"],[114,86,135,84],[114,89,135,87,"b"],[114,90,135,88],[114,91,135,89],[116,4,137,2],[117,4,138,2],[117,10,138,8,"blanks"],[117,16,138,27],[117,19,138,30],[117,21,138,32],[118,4,139,2],[118,10,139,8,"correctAnswers"],[118,24,139,49],[118,27,139,52],[118,28,139,53],[118,29,139,54],[119,4,140,2],[119,8,140,6,"displayText"],[119,19,140,17],[119,22,140,20],[119,24,140,22],[120,4,141,2],[120,8,141,6,"currentBlankIndex"],[120,25,141,23],[120,28,141,26],[120,29,141,27],[122,4,143,2],[123,4,144,2],[123,10,144,8,"decoyPool"],[123,19,144,17],[123,22,144,20,"allModuleWords"],[123,36,144,34],[123,40,144,38,"allModuleWords"],[123,54,144,52],[123,55,144,53,"length"],[123,61,144,59],[123,64,144,62],[123,65,144,63],[123,68,145,6,"allModuleWords"],[123,82,145,20],[123,85,146,6,"words"],[123,90,146,11],[124,4,148,2],[124,9,148,7],[124,13,148,11,"i"],[124,14,148,12],[124,17,148,15],[124,18,148,16],[124,20,148,18,"i"],[124,21,148,19],[124,24,148,22,"words"],[124,29,148,27],[124,30,148,28,"length"],[124,36,148,34],[124,38,148,36,"i"],[124,39,148,37],[124,41,148,39],[124,43,148,41],[125,6,149,4],[125,12,149,10,"word"],[125,16,149,14],[125,19,149,17,"words"],[125,24,149,22],[125,25,149,23,"i"],[125,26,149,24],[125,27,149,25],[126,6,150,4],[126,12,150,10,"isBlank"],[126,19,150,17],[126,22,150,20,"indicesToRemove"],[126,37,150,35],[126,38,150,36,"includes"],[126,46,150,44],[126,47,150,45,"i"],[126,48,150,46],[126,49,150,47],[127,6,152,4],[127,10,152,8,"isBlank"],[127,17,152,15],[127,19,152,17],[128,8,153,6],[129,8,154,6],[129,14,154,12,"correctAnswer"],[129,27,154,25],[129,30,154,28,"word"],[129,34,154,32],[130,8,155,6],[130,14,155,12,"decoys"],[130,20,155,18],[130,23,155,21,"generateDecoys"],[130,37,155,35],[130,38,155,36,"correctAnswer"],[130,51,155,49],[130,53,155,51,"decoyPool"],[130,62,155,60],[130,64,155,62],[130,65,155,63],[130,66,155,64],[131,8,156,6],[131,14,156,12,"allChoices"],[131,24,156,22],[131,27,156,25],[131,28,156,26,"correctAnswer"],[131,41,156,39],[131,43,156,41],[131,46,156,44,"decoys"],[131,52,156,50],[131,53,156,51],[133,8,158,6],[134,8,159,6],[134,13,159,11],[134,17,159,15,"j"],[134,18,159,16],[134,21,159,19,"allChoices"],[134,31,159,29],[134,32,159,30,"length"],[134,38,159,36],[134,41,159,39],[134,42,159,40],[134,44,159,42,"j"],[134,45,159,43],[134,48,159,46],[134,49,159,47],[134,51,159,49,"j"],[134,52,159,50],[134,54,159,52],[134,56,159,54],[135,10,160,8],[135,16,160,14,"k"],[135,17,160,15],[135,20,160,18,"Math"],[135,24,160,22],[135,25,160,23,"floor"],[135,30,160,28],[135,31,160,29,"Math"],[135,35,160,33],[135,36,160,34,"random"],[135,42,160,40],[135,43,160,41],[135,44,160,42],[135,48,160,46,"j"],[135,49,160,47],[135,52,160,50],[135,53,160,51],[135,54,160,52],[135,55,160,53],[136,10,161,8],[136,11,161,9,"allChoices"],[136,21,161,19],[136,22,161,20,"j"],[136,23,161,21],[136,24,161,22],[136,26,161,24,"allChoices"],[136,36,161,34],[136,37,161,35,"k"],[136,38,161,36],[136,39,161,37],[136,40,161,38],[136,43,161,41],[136,44,161,42,"allChoices"],[136,54,161,52],[136,55,161,53,"k"],[136,56,161,54],[136,57,161,55],[136,59,161,57,"allChoices"],[136,69,161,67],[136,70,161,68,"j"],[136,71,161,69],[136,72,161,70],[136,73,161,71],[137,8,162,6],[138,8,164,6,"blanks"],[138,14,164,12],[138,15,164,13,"push"],[138,19,164,17],[138,20,164,18],[139,10,165,8,"index"],[139,15,165,13],[139,17,165,15,"currentBlankIndex"],[139,34,165,32],[140,10,166,8,"correctAnswer"],[140,23,166,21],[141,10,167,8,"choices"],[141,17,167,15],[141,19,167,17,"allChoices"],[142,8,168,6],[142,9,168,7],[142,10,168,8],[143,8,170,6,"correctAnswers"],[143,22,170,20],[143,23,170,21,"currentBlankIndex"],[143,40,170,38],[143,41,170,39],[143,44,170,42,"correctAnswer"],[143,57,170,55],[144,8,171,6,"displayText"],[144,19,171,17],[144,23,171,21],[144,28,171,26],[145,8,172,6,"currentBlankIndex"],[145,25,172,23],[145,27,172,25],[146,6,173,4],[146,7,173,5],[146,13,173,11],[147,8,174,6],[148,8,175,6,"displayText"],[148,19,175,17],[148,23,175,21,"word"],[148,27,175,25],[149,6,176,4],[151,6,178,4],[152,6,179,4],[152,10,179,8,"i"],[152,11,179,9],[152,14,179,12,"words"],[152,19,179,17],[152,20,179,18,"length"],[152,26,179,24],[152,29,179,27],[152,30,179,28],[152,32,179,30],[153,8,180,6,"displayText"],[153,19,180,17],[153,23,180,21],[153,26,180,24],[154,6,181,4],[155,4,182,2],[156,4,184,2],[156,11,184,9],[157,6,185,4,"displayText"],[157,17,185,15],[158,6,186,4,"blanks"],[158,12,186,10],[159,6,187,4,"stage"],[159,11,187,9],[160,6,188,4,"originalText"],[160,18,188,16],[160,20,188,18,"cleanText"],[160,29,188,27],[161,6,189,4,"correctAnswers"],[162,4,190,2],[162,5,190,3],[163,2,191,0],[165,2,193,0],[166,0,194,0],[167,0,195,0],[168,2,196,7],[168,11,196,16,"checkFillBlankAnswers"],[168,32,196,37,"checkFillBlankAnswers"],[168,33,197,2,"processedQuestion"],[168,50,197,38],[168,52,198,2,"userAnswers"],[168,63,198,40],[168,65,204,2],[169,4,205,2],[169,10,205,8,"totalBlanks"],[169,21,205,19],[169,24,205,22,"processedQuestion"],[169,41,205,39],[169,42,205,40,"blanks"],[169,48,205,46],[169,49,205,47,"length"],[169,55,205,53],[170,4,206,2],[170,8,206,6,"correctCount"],[170,20,206,18],[170,23,206,21],[170,24,206,22],[171,4,208,2,"processedQuestion"],[171,21,208,19],[171,22,208,20,"blanks"],[171,28,208,26],[171,29,208,27,"forEach"],[171,36,208,34],[171,37,208,36,"blank"],[171,42,208,41],[171,46,208,46],[172,6,209,4],[172,12,209,10,"userAnswer"],[172,22,209,20],[172,25,209,23,"userAnswers"],[172,36,209,34],[172,37,209,35,"blank"],[172,42,209,40],[172,43,209,41,"index"],[172,48,209,46],[172,49,209,47],[173,6,210,4],[173,10,210,8,"userAnswer"],[173,20,210,18],[173,24,210,22,"userAnswer"],[173,34,210,32],[173,35,210,33,"toLowerCase"],[173,46,210,44],[173,47,210,45],[173,48,210,46],[173,53,210,51,"blank"],[173,58,210,56],[173,59,210,57,"correctAnswer"],[173,72,210,70],[173,73,210,71,"toLowerCase"],[173,84,210,82],[173,85,210,83],[173,86,210,84],[173,88,210,86],[174,8,211,6,"correctCount"],[174,20,211,18],[174,22,211,20],[175,6,212,4],[176,4,213,2],[176,5,213,3],[176,6,213,4],[177,4,215,2],[177,10,215,8,"accuracy"],[177,18,215,16],[177,21,215,19,"totalBlanks"],[177,32,215,30],[177,35,215,33],[177,36,215,34],[177,39,215,38,"correctCount"],[177,51,215,50],[177,54,215,53,"totalBlanks"],[177,65,215,64],[177,68,215,68],[177,71,215,71],[177,74,215,74],[177,75,215,75],[178,4,216,2],[178,10,216,8,"correct"],[178,17,216,15],[178,20,216,18,"correctCount"],[178,32,216,30],[178,37,216,35,"totalBlanks"],[178,48,216,46],[180,4,218,2],[181,4,219,2],[181,10,219,8,"basePoints"],[181,20,219,18],[181,23,219,21],[181,25,219,23],[182,4,220,2],[182,10,220,8,"stageMultiplier"],[182,25,220,23],[182,28,220,26,"processedQuestion"],[182,45,220,43],[182,46,220,44,"stage"],[182,51,220,49],[183,4,221,2],[183,10,221,8,"pointsEarned"],[183,22,221,20],[183,25,221,23,"correct"],[183,32,221,30],[183,35,221,33,"Math"],[183,39,221,37],[183,40,221,38,"round"],[183,45,221,43],[183,46,221,44,"basePoints"],[183,56,221,54],[183,59,221,57,"stageMultiplier"],[183,74,221,72],[183,78,221,76,"accuracy"],[183,86,221,84],[183,89,221,87],[183,92,221,90],[183,93,221,91],[183,94,221,92],[183,97,221,95],[183,98,221,96],[184,4,223,2],[184,11,223,9],[185,6,224,4,"correct"],[185,13,224,11],[186,6,225,4,"accuracy"],[186,14,225,12],[187,6,226,4,"correctAnswers"],[187,20,226,18],[187,22,226,20,"processedQuestion"],[187,39,226,37],[187,40,226,38,"correctAnswers"],[187,54,226,52],[188,6,227,4,"pointsEarned"],[189,4,228,2],[189,5,228,3],[190,2,229,0],[191,0,229,1],[191,3]],"functionMap":{"names":["<global>","getRemovalPercentage","getMinimumWordsToRemove","generateDecoys","allWords.filter$argument_0","candidates.filter$argument_0","filter$argument_0","processFillBlankQuestion","Array.from$argument_1","wordIndices.slice.sort$argument_0","checkFillBlankAnswers","processedQuestion.blanks.forEach$argument_0"],"mappings":"AAA;ACuB;CDK;AEM;CFK;AGK;qCCK;gBDE;0CES;gDFC;YGK,oCH;CHqB;OOK;yDCiC,WD;yEES,eF;CPwD;OUK;mCCY;GDK;CVgB"},"hasCjsExports":false},"type":"js/module"}]}