{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./ExponentSpeech","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":46,"index":103}}],"key":"G2eOEME+jLV6t/F9m3g24/ZyRUs=","exportNames":["*"],"imports":1}},{"name":"./Speech.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":104},"end":{"line":3,"column":46,"index":150}}],"key":"SNz2Uxx+h7gZlVByUTOQkNQNiYw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"VoiceQuality\", {\n    enumerable: true,\n    get: function () {\n      return _SpeechTypes.VoiceQuality;\n    }\n  });\n  exports.speak = speak;\n  exports.getAvailableVoicesAsync = getAvailableVoicesAsync;\n  exports.isSpeakingAsync = isSpeakingAsync;\n  exports.stop = stop;\n  exports.pause = pause;\n  exports.resume = resume;\n  Object.defineProperty(exports, \"maxSpeechInputLength\", {\n    enumerable: true,\n    get: function () {\n      return maxSpeechInputLength;\n    }\n  });\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _ExponentSpeech = require(_dependencyMap[1], \"./ExponentSpeech\");\n  var ExponentSpeech = _interopDefault(_ExponentSpeech);\n  var _SpeechTypes = require(_dependencyMap[2], \"./Speech.types\");\n  const _CALLBACKS = {};\n  let _nextCallbackId = 1;\n  let _didSetListeners = false;\n  function _makeCallbackId() {\n    return String(_nextCallbackId++);\n  }\n  function _unregisterListenersIfNeeded() {\n    if (Object.keys(_CALLBACKS).length === 0) {\n      removeSpeakingListener('Exponent.speakingStarted');\n      removeSpeakingListener('Exponent.speakingWillSayNextString');\n      removeSpeakingListener('Exponent.speakingDone');\n      removeSpeakingListener('Exponent.speakingStopped');\n      removeSpeakingListener('Exponent.speakingError');\n      _didSetListeners = false;\n    }\n  }\n  function _registerListenersIfNeeded() {\n    if (_didSetListeners) return;\n    _didSetListeners = true;\n    setSpeakingListener('Exponent.speakingStarted', ({\n      id\n    }) => {\n      const options = _CALLBACKS[id];\n      if (options && options.onStart) {\n        options.onStart();\n      }\n    });\n    setSpeakingListener('Exponent.speakingWillSayNextString', ({\n      id,\n      charIndex,\n      charLength\n    }) => {\n      const options = _CALLBACKS[id];\n      if (options && options.onBoundary) {\n        // @ts-expect-error TODO(cedric): type is `SpeechEventCallback` while it should be `NativeBoundaryEventCallback` in this context, resulting in errors around `this` context\n        options.onBoundary({\n          charIndex,\n          charLength\n        });\n      }\n    });\n    setSpeakingListener('Exponent.speakingDone', ({\n      id\n    }) => {\n      const options = _CALLBACKS[id];\n      if (options && options.onDone) {\n        options.onDone();\n      }\n      delete _CALLBACKS[id];\n      _unregisterListenersIfNeeded();\n    });\n    setSpeakingListener('Exponent.speakingStopped', ({\n      id\n    }) => {\n      const options = _CALLBACKS[id];\n      if (options && options.onStopped) {\n        options.onStopped();\n      }\n      delete _CALLBACKS[id];\n      _unregisterListenersIfNeeded();\n    });\n    // @ts-expect-error TODO(cedric): Android does not provide the `error` parameter for the `speakingError` event, while iOS never uses this event at all\n    setSpeakingListener('Exponent.speakingError', ({\n      id,\n      error\n    }) => {\n      const options = _CALLBACKS[id];\n      if (options && options.onError) {\n        options.onError(new Error(error));\n      }\n      delete _CALLBACKS[id];\n      _unregisterListenersIfNeeded();\n    });\n  }\n  // @needsAudit\n  /**\n   * Speak out loud the text given options. Calling this when another text is being spoken adds\n   * an utterance to queue.\n   * @param text The text to be spoken. Cannot be longer than [`Speech.maxSpeechInputLength`](#speechmaxspeechinputlength).\n   * @param options A `SpeechOptions` object.\n   */\n  function speak(text, options = {}) {\n    const id = _makeCallbackId();\n    _CALLBACKS[id] = options;\n    _registerListenersIfNeeded();\n    ExponentSpeech.default.speak(String(id), text, options);\n  }\n  // @needsAudit\n  /**\n   * Returns list of all available voices.\n   * @return List of `Voice` objects.\n   */\n  async function getAvailableVoicesAsync() {\n    if (!ExponentSpeech.default.getVoices) {\n      throw new _expoModulesCore.UnavailabilityError('Speech', 'getVoices');\n    }\n    return ExponentSpeech.default.getVoices();\n  }\n  //@needsAudit\n  /**\n   * Determine whether the Text-to-speech utility is currently speaking. Will return `true` if speaker\n   * is paused.\n   * @return Returns a Promise that fulfils with a boolean, `true` if speaking, `false` if not.\n   */\n  async function isSpeakingAsync() {\n    return ExponentSpeech.default.isSpeaking();\n  }\n  // @needsAudit\n  /**\n   * Interrupts current speech and deletes all in queue.\n   */\n  async function stop() {\n    return ExponentSpeech.default.stop();\n  }\n  // @needsAudit\n  /**\n   * Pauses current speech. This method is not available on Android.\n   */\n  async function pause() {\n    if (!ExponentSpeech.default.pause) {\n      throw new _expoModulesCore.UnavailabilityError('Speech', 'pause');\n    }\n    return ExponentSpeech.default.pause();\n  }\n  // @needsAudit\n  /**\n   * Resumes speaking previously paused speech or does nothing if there's none. This method is not\n   * available on Android.\n   */\n  async function resume() {\n    if (!ExponentSpeech.default.resume) {\n      throw new _expoModulesCore.UnavailabilityError('Speech', 'resume');\n    }\n    return ExponentSpeech.default.resume();\n  }\n  function setSpeakingListener(eventName, callback) {\n    const listenerCount = ExponentSpeech.default.listenerCount(eventName);\n    if (listenerCount > 0) {\n      ExponentSpeech.default.removeAllListeners(eventName);\n    }\n    ExponentSpeech.default.addListener(eventName, callback);\n  }\n  function removeSpeakingListener(eventName) {\n    ExponentSpeech.default.removeAllListeners(eventName);\n  }\n  // @needsAudit\n  /**\n   * Maximum possible text length acceptable by `Speech.speak()` method. It is platform-dependent.\n   * On iOS, this returns `Number.MAX_VALUE`.\n   */\n  const maxSpeechInputLength = ExponentSpeech.default.maxSpeechInputLength || Number.MAX_VALUE;\n});","lineCount":185,"map":[[12,2,4,0,"Object"],[12,8,4,0],[12,9,4,0,"defineProperty"],[12,23,4,0],[12,24,4,0,"exports"],[12,31,4,0],[13,4,4,0,"enumerable"],[13,14,4,0],[14,4,4,0,"get"],[14,7,4,0],[14,18,4,0,"get"],[14,19,4,0],[15,6,4,0],[15,13,4,9,"VoiceQuality"],[15,25,4,21],[15,26,4,21,"VoiceQuality"],[15,38,4,21],[16,4,4,21],[17,2,4,21],[18,2,74,0,"exports"],[18,9,74,0],[18,10,74,0,"speak"],[18,15,74,0],[18,18,74,0,"speak"],[18,23,74,0],[19,2,85,0,"exports"],[19,9,85,0],[19,10,85,0,"getAvailableVoicesAsync"],[19,33,85,0],[19,36,85,0,"getAvailableVoicesAsync"],[19,59,85,0],[20,2,97,0,"exports"],[20,9,97,0],[20,10,97,0,"isSpeakingAsync"],[20,25,97,0],[20,28,97,0,"isSpeakingAsync"],[20,43,97,0],[21,2,104,0,"exports"],[21,9,104,0],[21,10,104,0,"stop"],[21,14,104,0],[21,17,104,0,"stop"],[21,21,104,0],[22,2,111,0,"exports"],[22,9,111,0],[22,10,111,0,"pause"],[22,15,111,0],[22,18,111,0,"pause"],[22,23,111,0],[23,2,122,0,"exports"],[23,9,122,0],[23,10,122,0,"resume"],[23,16,122,0],[23,19,122,0,"resume"],[23,25,122,0],[24,2,143,0,"Object"],[24,8,143,0],[24,9,143,0,"defineProperty"],[24,23,143,0],[24,24,143,0,"exports"],[24,31,143,0],[25,4,143,0,"enumerable"],[25,14,143,0],[26,4,143,0,"get"],[26,7,143,0],[26,18,143,0,"get"],[26,19,143,0],[27,6,143,0],[27,13,143,0,"maxSpeechInputLength"],[27,33,143,0],[28,4,143,0],[29,2,143,0],[30,2,1,0],[30,6,1,0,"_expoModulesCore"],[30,22,1,0],[30,25,1,0,"require"],[30,32,1,0],[30,33,1,0,"_dependencyMap"],[30,47,1,0],[31,2,2,0],[31,6,2,0,"_ExponentSpeech"],[31,21,2,0],[31,24,2,0,"require"],[31,31,2,0],[31,32,2,0,"_dependencyMap"],[31,46,2,0],[32,2,2,0],[32,6,2,0,"ExponentSpeech"],[32,20,2,0],[32,23,2,0,"_interopDefault"],[32,38,2,0],[32,39,2,0,"_ExponentSpeech"],[32,54,2,0],[33,2,3,0],[33,6,3,0,"_SpeechTypes"],[33,18,3,0],[33,21,3,0,"require"],[33,28,3,0],[33,29,3,0,"_dependencyMap"],[33,43,3,0],[34,2,5,0],[34,8,5,6,"_CALLBACKS"],[34,18,5,16],[34,21,5,19],[34,22,5,20],[34,23,5,21],[35,2,6,0],[35,6,6,4,"_nextCallbackId"],[35,21,6,19],[35,24,6,22],[35,25,6,23],[36,2,7,0],[36,6,7,4,"_didSetListeners"],[36,22,7,20],[36,25,7,23],[36,30,7,28],[37,2,8,0],[37,11,8,9,"_makeCallbackId"],[37,26,8,24,"_makeCallbackId"],[37,27,8,24],[37,29,8,27],[38,4,9,4],[38,11,9,11,"String"],[38,17,9,17],[38,18,9,18,"_nextCallbackId"],[38,33,9,33],[38,35,9,35],[38,36,9,36],[39,2,10,0],[40,2,11,0],[40,11,11,9,"_unregisterListenersIfNeeded"],[40,39,11,37,"_unregisterListenersIfNeeded"],[40,40,11,37],[40,42,11,40],[41,4,12,4],[41,8,12,8,"Object"],[41,14,12,14],[41,15,12,15,"keys"],[41,19,12,19],[41,20,12,20,"_CALLBACKS"],[41,30,12,30],[41,31,12,31],[41,32,12,32,"length"],[41,38,12,38],[41,43,12,43],[41,44,12,44],[41,46,12,46],[42,6,13,8,"removeSpeakingListener"],[42,28,13,30],[42,29,13,31],[42,55,13,57],[42,56,13,58],[43,6,14,8,"removeSpeakingListener"],[43,28,14,30],[43,29,14,31],[43,65,14,67],[43,66,14,68],[44,6,15,8,"removeSpeakingListener"],[44,28,15,30],[44,29,15,31],[44,52,15,54],[44,53,15,55],[45,6,16,8,"removeSpeakingListener"],[45,28,16,30],[45,29,16,31],[45,55,16,57],[45,56,16,58],[46,6,17,8,"removeSpeakingListener"],[46,28,17,30],[46,29,17,31],[46,53,17,55],[46,54,17,56],[47,6,18,8,"_didSetListeners"],[47,22,18,24],[47,25,18,27],[47,30,18,32],[48,4,19,4],[49,2,20,0],[50,2,21,0],[50,11,21,9,"_registerListenersIfNeeded"],[50,37,21,35,"_registerListenersIfNeeded"],[50,38,21,35],[50,40,21,38],[51,4,22,4],[51,8,22,8,"_didSetListeners"],[51,24,22,24],[51,26,23,8],[52,4,24,4,"_didSetListeners"],[52,20,24,20],[52,23,24,23],[52,27,24,27],[53,4,25,4,"setSpeakingListener"],[53,23,25,23],[53,24,25,24],[53,50,25,50],[53,52,25,52],[53,53,25,53],[54,6,25,55,"id"],[55,4,25,58],[55,5,25,59],[55,10,25,64],[56,6,26,8],[56,12,26,14,"options"],[56,19,26,21],[56,22,26,24,"_CALLBACKS"],[56,32,26,34],[56,33,26,35,"id"],[56,35,26,37],[56,36,26,38],[57,6,27,8],[57,10,27,12,"options"],[57,17,27,19],[57,21,27,23,"options"],[57,28,27,30],[57,29,27,31,"onStart"],[57,36,27,38],[57,38,27,40],[58,8,28,12,"options"],[58,15,28,19],[58,16,28,20,"onStart"],[58,23,28,27],[58,24,28,28],[58,25,28,29],[59,6,29,8],[60,4,30,4],[60,5,30,5],[60,6,30,6],[61,4,31,4,"setSpeakingListener"],[61,23,31,23],[61,24,31,24],[61,60,31,60],[61,62,31,62],[61,63,31,63],[62,6,31,65,"id"],[62,8,31,67],[63,6,31,69,"charIndex"],[63,15,31,78],[64,6,31,80,"charLength"],[65,4,31,91],[65,5,31,92],[65,10,31,97],[66,6,32,8],[66,12,32,14,"options"],[66,19,32,21],[66,22,32,24,"_CALLBACKS"],[66,32,32,34],[66,33,32,35,"id"],[66,35,32,37],[66,36,32,38],[67,6,33,8],[67,10,33,12,"options"],[67,17,33,19],[67,21,33,23,"options"],[67,28,33,30],[67,29,33,31,"onBoundary"],[67,39,33,41],[67,41,33,43],[68,8,34,12],[69,8,35,12,"options"],[69,15,35,19],[69,16,35,20,"onBoundary"],[69,26,35,30],[69,27,35,31],[70,10,36,16,"charIndex"],[70,19,36,25],[71,10,37,16,"charLength"],[72,8,38,12],[72,9,38,13],[72,10,38,14],[73,6,39,8],[74,4,40,4],[74,5,40,5],[74,6,40,6],[75,4,41,4,"setSpeakingListener"],[75,23,41,23],[75,24,41,24],[75,47,41,47],[75,49,41,49],[75,50,41,50],[76,6,41,52,"id"],[77,4,41,55],[77,5,41,56],[77,10,41,61],[78,6,42,8],[78,12,42,14,"options"],[78,19,42,21],[78,22,42,24,"_CALLBACKS"],[78,32,42,34],[78,33,42,35,"id"],[78,35,42,37],[78,36,42,38],[79,6,43,8],[79,10,43,12,"options"],[79,17,43,19],[79,21,43,23,"options"],[79,28,43,30],[79,29,43,31,"onDone"],[79,35,43,37],[79,37,43,39],[80,8,44,12,"options"],[80,15,44,19],[80,16,44,20,"onDone"],[80,22,44,26],[80,23,44,27],[80,24,44,28],[81,6,45,8],[82,6,46,8],[82,13,46,15,"_CALLBACKS"],[82,23,46,25],[82,24,46,26,"id"],[82,26,46,28],[82,27,46,29],[83,6,47,8,"_unregisterListenersIfNeeded"],[83,34,47,36],[83,35,47,37],[83,36,47,38],[84,4,48,4],[84,5,48,5],[84,6,48,6],[85,4,49,4,"setSpeakingListener"],[85,23,49,23],[85,24,49,24],[85,50,49,50],[85,52,49,52],[85,53,49,53],[86,6,49,55,"id"],[87,4,49,58],[87,5,49,59],[87,10,49,64],[88,6,50,8],[88,12,50,14,"options"],[88,19,50,21],[88,22,50,24,"_CALLBACKS"],[88,32,50,34],[88,33,50,35,"id"],[88,35,50,37],[88,36,50,38],[89,6,51,8],[89,10,51,12,"options"],[89,17,51,19],[89,21,51,23,"options"],[89,28,51,30],[89,29,51,31,"onStopped"],[89,38,51,40],[89,40,51,42],[90,8,52,12,"options"],[90,15,52,19],[90,16,52,20,"onStopped"],[90,25,52,29],[90,26,52,30],[90,27,52,31],[91,6,53,8],[92,6,54,8],[92,13,54,15,"_CALLBACKS"],[92,23,54,25],[92,24,54,26,"id"],[92,26,54,28],[92,27,54,29],[93,6,55,8,"_unregisterListenersIfNeeded"],[93,34,55,36],[93,35,55,37],[93,36,55,38],[94,4,56,4],[94,5,56,5],[94,6,56,6],[95,4,57,4],[96,4,58,4,"setSpeakingListener"],[96,23,58,23],[96,24,58,24],[96,48,58,48],[96,50,58,50],[96,51,58,51],[97,6,58,53,"id"],[97,8,58,55],[98,6,58,57,"error"],[99,4,58,63],[99,5,58,64],[99,10,58,69],[100,6,59,8],[100,12,59,14,"options"],[100,19,59,21],[100,22,59,24,"_CALLBACKS"],[100,32,59,34],[100,33,59,35,"id"],[100,35,59,37],[100,36,59,38],[101,6,60,8],[101,10,60,12,"options"],[101,17,60,19],[101,21,60,23,"options"],[101,28,60,30],[101,29,60,31,"onError"],[101,36,60,38],[101,38,60,40],[102,8,61,12,"options"],[102,15,61,19],[102,16,61,20,"onError"],[102,23,61,27],[102,24,61,28],[102,28,61,32,"Error"],[102,33,61,37],[102,34,61,38,"error"],[102,39,61,43],[102,40,61,44],[102,41,61,45],[103,6,62,8],[104,6,63,8],[104,13,63,15,"_CALLBACKS"],[104,23,63,25],[104,24,63,26,"id"],[104,26,63,28],[104,27,63,29],[105,6,64,8,"_unregisterListenersIfNeeded"],[105,34,64,36],[105,35,64,37],[105,36,64,38],[106,4,65,4],[106,5,65,5],[106,6,65,6],[107,2,66,0],[108,2,67,0],[109,2,68,0],[110,0,69,0],[111,0,70,0],[112,0,71,0],[113,0,72,0],[114,0,73,0],[115,2,74,7],[115,11,74,16,"speak"],[115,16,74,21,"speak"],[115,17,74,22,"text"],[115,21,74,26],[115,23,74,28,"options"],[115,30,74,35],[115,33,74,38],[115,34,74,39],[115,35,74,40],[115,37,74,42],[116,4,75,4],[116,10,75,10,"id"],[116,12,75,12],[116,15,75,15,"_makeCallbackId"],[116,30,75,30],[116,31,75,31],[116,32,75,32],[117,4,76,4,"_CALLBACKS"],[117,14,76,14],[117,15,76,15,"id"],[117,17,76,17],[117,18,76,18],[117,21,76,21,"options"],[117,28,76,28],[118,4,77,4,"_registerListenersIfNeeded"],[118,30,77,30],[118,31,77,31],[118,32,77,32],[119,4,78,4,"ExponentSpeech"],[119,18,78,18],[119,19,78,18,"default"],[119,26,78,18],[119,27,78,19,"speak"],[119,32,78,24],[119,33,78,25,"String"],[119,39,78,31],[119,40,78,32,"id"],[119,42,78,34],[119,43,78,35],[119,45,78,37,"text"],[119,49,78,41],[119,51,78,43,"options"],[119,58,78,50],[119,59,78,51],[120,2,79,0],[121,2,80,0],[122,2,81,0],[123,0,82,0],[124,0,83,0],[125,0,84,0],[126,2,85,7],[126,17,85,22,"getAvailableVoicesAsync"],[126,40,85,45,"getAvailableVoicesAsync"],[126,41,85,45],[126,43,85,48],[127,4,86,4],[127,8,86,8],[127,9,86,9,"ExponentSpeech"],[127,23,86,23],[127,24,86,23,"default"],[127,31,86,23],[127,32,86,24,"getVoices"],[127,41,86,33],[127,43,86,35],[128,6,87,8],[128,12,87,14],[128,16,87,18,"UnavailabilityError"],[128,32,87,37],[128,33,87,37,"UnavailabilityError"],[128,52,87,37],[128,53,87,38],[128,61,87,46],[128,63,87,48],[128,74,87,59],[128,75,87,60],[129,4,88,4],[130,4,89,4],[130,11,89,11,"ExponentSpeech"],[130,25,89,25],[130,26,89,25,"default"],[130,33,89,25],[130,34,89,26,"getVoices"],[130,43,89,35],[130,44,89,36],[130,45,89,37],[131,2,90,0],[132,2,91,0],[133,2,92,0],[134,0,93,0],[135,0,94,0],[136,0,95,0],[137,0,96,0],[138,2,97,7],[138,17,97,22,"isSpeakingAsync"],[138,32,97,37,"isSpeakingAsync"],[138,33,97,37],[138,35,97,40],[139,4,98,4],[139,11,98,11,"ExponentSpeech"],[139,25,98,25],[139,26,98,25,"default"],[139,33,98,25],[139,34,98,26,"isSpeaking"],[139,44,98,36],[139,45,98,37],[139,46,98,38],[140,2,99,0],[141,2,100,0],[142,2,101,0],[143,0,102,0],[144,0,103,0],[145,2,104,7],[145,17,104,22,"stop"],[145,21,104,26,"stop"],[145,22,104,26],[145,24,104,29],[146,4,105,4],[146,11,105,11,"ExponentSpeech"],[146,25,105,25],[146,26,105,25,"default"],[146,33,105,25],[146,34,105,26,"stop"],[146,38,105,30],[146,39,105,31],[146,40,105,32],[147,2,106,0],[148,2,107,0],[149,2,108,0],[150,0,109,0],[151,0,110,0],[152,2,111,7],[152,17,111,22,"pause"],[152,22,111,27,"pause"],[152,23,111,27],[152,25,111,30],[153,4,112,4],[153,8,112,8],[153,9,112,9,"ExponentSpeech"],[153,23,112,23],[153,24,112,23,"default"],[153,31,112,23],[153,32,112,24,"pause"],[153,37,112,29],[153,39,112,31],[154,6,113,8],[154,12,113,14],[154,16,113,18,"UnavailabilityError"],[154,32,113,37],[154,33,113,37,"UnavailabilityError"],[154,52,113,37],[154,53,113,38],[154,61,113,46],[154,63,113,48],[154,70,113,55],[154,71,113,56],[155,4,114,4],[156,4,115,4],[156,11,115,11,"ExponentSpeech"],[156,25,115,25],[156,26,115,25,"default"],[156,33,115,25],[156,34,115,26,"pause"],[156,39,115,31],[156,40,115,32],[156,41,115,33],[157,2,116,0],[158,2,117,0],[159,2,118,0],[160,0,119,0],[161,0,120,0],[162,0,121,0],[163,2,122,7],[163,17,122,22,"resume"],[163,23,122,28,"resume"],[163,24,122,28],[163,26,122,31],[164,4,123,4],[164,8,123,8],[164,9,123,9,"ExponentSpeech"],[164,23,123,23],[164,24,123,23,"default"],[164,31,123,23],[164,32,123,24,"resume"],[164,38,123,30],[164,40,123,32],[165,6,124,8],[165,12,124,14],[165,16,124,18,"UnavailabilityError"],[165,32,124,37],[165,33,124,37,"UnavailabilityError"],[165,52,124,37],[165,53,124,38],[165,61,124,46],[165,63,124,48],[165,71,124,56],[165,72,124,57],[166,4,125,4],[167,4,126,4],[167,11,126,11,"ExponentSpeech"],[167,25,126,25],[167,26,126,25,"default"],[167,33,126,25],[167,34,126,26,"resume"],[167,40,126,32],[167,41,126,33],[167,42,126,34],[168,2,127,0],[169,2,128,0],[169,11,128,9,"setSpeakingListener"],[169,30,128,28,"setSpeakingListener"],[169,31,128,29,"eventName"],[169,40,128,38],[169,42,128,40,"callback"],[169,50,128,48],[169,52,128,50],[170,4,129,4],[170,10,129,10,"listenerCount"],[170,23,129,23],[170,26,129,26,"ExponentSpeech"],[170,40,129,40],[170,41,129,40,"default"],[170,48,129,40],[170,49,129,41,"listenerCount"],[170,62,129,54],[170,63,129,55,"eventName"],[170,72,129,64],[170,73,129,65],[171,4,130,4],[171,8,130,8,"listenerCount"],[171,21,130,21],[171,24,130,24],[171,25,130,25],[171,27,130,27],[172,6,131,8,"ExponentSpeech"],[172,20,131,22],[172,21,131,22,"default"],[172,28,131,22],[172,29,131,23,"removeAllListeners"],[172,47,131,41],[172,48,131,42,"eventName"],[172,57,131,51],[172,58,131,52],[173,4,132,4],[174,4,133,4,"ExponentSpeech"],[174,18,133,18],[174,19,133,18,"default"],[174,26,133,18],[174,27,133,19,"addListener"],[174,38,133,30],[174,39,133,31,"eventName"],[174,48,133,40],[174,50,133,42,"callback"],[174,58,133,50],[174,59,133,51],[175,2,134,0],[176,2,135,0],[176,11,135,9,"removeSpeakingListener"],[176,33,135,31,"removeSpeakingListener"],[176,34,135,32,"eventName"],[176,43,135,41],[176,45,135,43],[177,4,136,4,"ExponentSpeech"],[177,18,136,18],[177,19,136,18,"default"],[177,26,136,18],[177,27,136,19,"removeAllListeners"],[177,45,136,37],[177,46,136,38,"eventName"],[177,55,136,47],[177,56,136,48],[178,2,137,0],[179,2,138,0],[180,2,139,0],[181,0,140,0],[182,0,141,0],[183,0,142,0],[184,2,143,7],[184,8,143,13,"maxSpeechInputLength"],[184,28,143,33],[184,31,143,36,"ExponentSpeech"],[184,45,143,50],[184,46,143,50,"default"],[184,53,143,50],[184,54,143,51,"maxSpeechInputLength"],[184,74,143,71],[184,78,143,75,"Number"],[184,84,143,81],[184,85,143,82,"MAX_VALUE"],[184,94,143,91],[185,0,143,92],[185,3]],"functionMap":{"names":["<global>","_makeCallbackId","_unregisterListenersIfNeeded","_registerListenersIfNeeded","setSpeakingListener$argument_1","speak","getAvailableVoicesAsync","isSpeakingAsync","stop","pause","resume","setSpeakingListener","removeSpeakingListener"],"mappings":"AAA;ACO;CDE;AEC;CFS;AGC;oDCI;KDK;8DCC;KDS;iDCC;KDO;oDCC;KDO;kDCE;KDO;CHC;OKQ;CLK;OMM;CNK;OOO;CPE;OQK;CRE;OSK;CTK;OUM;CVK;AWC;CXM;AYC;CZE"},"hasCjsExports":false},"type":"js/module"}]}