{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":80,"index":80}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./Speech.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":81},"end":{"line":2,"column":46,"index":127}}],"key":"SNz2Uxx+h7gZlVByUTOQkNQNiYw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _SpeechTypes = require(_dependencyMap[1], \"./Speech.types\");\n  //https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/text\n  const MAX_SPEECH_INPUT_LENGTH = 32767;\n  async function getVoices() {\n    return new Promise(resolve => {\n      const voices = window.speechSynthesis.getVoices();\n      if (voices.length > 0) {\n        resolve(voices);\n        return;\n      }\n      // when a page loads it takes some amount of time to populate the voices list\n      // see https://stackoverflow.com/a/52005323/4337317\n      window.speechSynthesis.onvoiceschanged = function () {\n        const voices = window.speechSynthesis.getVoices();\n        resolve(voices);\n      };\n    });\n  }\n  class ExpoSpeech extends _expoModulesCore.NativeModule {\n    async speak(id, text, options) {\n      if (text.length > MAX_SPEECH_INPUT_LENGTH) {\n        throw new _expoModulesCore.CodedError('ERR_SPEECH_INPUT_LENGTH', 'Speech input text is too long! Limit of input length is: ' + MAX_SPEECH_INPUT_LENGTH);\n      }\n      const message = new SpeechSynthesisUtterance();\n      if (typeof options.rate === 'number') {\n        message.rate = options.rate;\n      }\n      if (typeof options.pitch === 'number') {\n        message.pitch = options.pitch;\n      }\n      if (typeof options.language === 'string') {\n        message.lang = options.language;\n      }\n      if (typeof options.volume === 'number') {\n        message.volume = options.volume;\n      }\n      if ('_voiceIndex' in options && options._voiceIndex != null) {\n        const voices = await getVoices();\n        message.voice = voices[Math.min(voices.length - 1, Math.max(0, options._voiceIndex))];\n      }\n      if (typeof options.voice === 'string') {\n        const voices = await getVoices();\n        message.voice = voices[Math.max(0, voices.findIndex(voice => voice.voiceURI === options.voice))];\n      }\n      if (typeof options.onResume === 'function') {\n        message.onresume = options.onResume;\n      }\n      if (typeof options.onMark === 'function') {\n        message.onmark = options.onMark;\n      }\n      if (typeof options.onBoundary === 'function') {\n        message.onboundary = options.onBoundary;\n      }\n      message.onstart = nativeEvent => {\n        this.emit('Exponent.speakingStarted', {\n          id,\n          nativeEvent\n        });\n      };\n      message.onend = nativeEvent => {\n        this.emit('Exponent.speakingDone', {\n          id,\n          nativeEvent\n        });\n      };\n      message.onpause = nativeEvent => {\n        this.emit('Exponent.speakingStopped', {\n          id,\n          nativeEvent\n        });\n      };\n      message.onerror = nativeEvent => {\n        this.emit('Exponent.speakingError', {\n          id,\n          nativeEvent\n        });\n      };\n      message.text = text;\n      window.speechSynthesis.speak(message);\n      return message;\n    }\n    async getVoices() {\n      const voices = await getVoices();\n      return voices.map(voice => ({\n        identifier: voice.voiceURI,\n        quality: _SpeechTypes.VoiceQuality.Default,\n        isDefault: voice.default,\n        language: voice.lang,\n        localService: voice.localService,\n        name: voice.name,\n        voiceURI: voice.voiceURI\n      }));\n    }\n    async isSpeaking() {\n      return window.speechSynthesis.speaking;\n    }\n    async stop() {\n      return window.speechSynthesis.cancel();\n    }\n    async pause() {\n      return window.speechSynthesis.pause();\n    }\n    async resume() {\n      return window.speechSynthesis.resume();\n    }\n    maxSpeechInputLength = MAX_SPEECH_INPUT_LENGTH;\n  }\n  var _default = (0, _expoModulesCore.registerWebModule)(ExpoSpeech, 'ExpoSpeech');\n});","lineCount":122,"map":[[7,2,98,0,"Object"],[7,8,98,0],[7,9,98,0,"defineProperty"],[7,23,98,0],[7,24,98,0,"exports"],[7,31,98,0],[8,4,98,0,"enumerable"],[8,14,98,0],[9,4,98,0,"get"],[9,7,98,0],[9,18,98,0,"get"],[9,19,98,0],[10,6,98,0],[10,13,98,0,"_default"],[10,21,98,0],[11,4,98,0],[12,2,98,0],[13,2,1,0],[13,6,1,0,"_expoModulesCore"],[13,22,1,0],[13,25,1,0,"require"],[13,32,1,0],[13,33,1,0,"_dependencyMap"],[13,47,1,0],[14,2,2,0],[14,6,2,0,"_SpeechTypes"],[14,18,2,0],[14,21,2,0,"require"],[14,28,2,0],[14,29,2,0,"_dependencyMap"],[14,43,2,0],[15,2,3,0],[16,2,4,0],[16,8,4,6,"MAX_SPEECH_INPUT_LENGTH"],[16,31,4,29],[16,34,4,32],[16,39,4,37],[17,2,5,0],[17,17,5,15,"getVoices"],[17,26,5,24,"getVoices"],[17,27,5,24],[17,29,5,27],[18,4,6,4],[18,11,6,11],[18,15,6,15,"Promise"],[18,22,6,22],[18,23,6,24,"resolve"],[18,30,6,31],[18,34,6,36],[19,6,7,8],[19,12,7,14,"voices"],[19,18,7,20],[19,21,7,23,"window"],[19,27,7,29],[19,28,7,30,"speechSynthesis"],[19,43,7,45],[19,44,7,46,"getVoices"],[19,53,7,55],[19,54,7,56],[19,55,7,57],[20,6,8,8],[20,10,8,12,"voices"],[20,16,8,18],[20,17,8,19,"length"],[20,23,8,25],[20,26,8,28],[20,27,8,29],[20,29,8,31],[21,8,9,12,"resolve"],[21,15,9,19],[21,16,9,20,"voices"],[21,22,9,26],[21,23,9,27],[22,8,10,12],[23,6,11,8],[24,6,12,8],[25,6,13,8],[26,6,14,8,"window"],[26,12,14,14],[26,13,14,15,"speechSynthesis"],[26,28,14,30],[26,29,14,31,"onvoiceschanged"],[26,44,14,46],[26,47,14,49],[26,59,14,61],[27,8,15,12],[27,14,15,18,"voices"],[27,20,15,24],[27,23,15,27,"window"],[27,29,15,33],[27,30,15,34,"speechSynthesis"],[27,45,15,49],[27,46,15,50,"getVoices"],[27,55,15,59],[27,56,15,60],[27,57,15,61],[28,8,16,12,"resolve"],[28,15,16,19],[28,16,16,20,"voices"],[28,22,16,26],[28,23,16,27],[29,6,17,8],[29,7,17,9],[30,4,18,4],[30,5,18,5],[30,6,18,6],[31,2,19,0],[32,2,20,0],[32,8,20,6,"ExpoSpeech"],[32,18,20,16],[32,27,20,25,"NativeModule"],[32,43,20,37],[32,44,20,37,"NativeModule"],[32,56,20,37],[32,57,20,38],[33,4,21,4],[33,10,21,10,"speak"],[33,15,21,15,"speak"],[33,16,21,16,"id"],[33,18,21,18],[33,20,21,20,"text"],[33,24,21,24],[33,26,21,26,"options"],[33,33,21,33],[33,35,21,35],[34,6,22,8],[34,10,22,12,"text"],[34,14,22,16],[34,15,22,17,"length"],[34,21,22,23],[34,24,22,26,"MAX_SPEECH_INPUT_LENGTH"],[34,47,22,49],[34,49,22,51],[35,8,23,12],[35,14,23,18],[35,18,23,22,"CodedError"],[35,34,23,32],[35,35,23,32,"CodedError"],[35,45,23,32],[35,46,23,33],[35,71,23,58],[35,73,23,60],[35,132,23,119],[35,135,23,122,"MAX_SPEECH_INPUT_LENGTH"],[35,158,23,145],[35,159,23,146],[36,6,24,8],[37,6,25,8],[37,12,25,14,"message"],[37,19,25,21],[37,22,25,24],[37,26,25,28,"SpeechSynthesisUtterance"],[37,50,25,52],[37,51,25,53],[37,52,25,54],[38,6,26,8],[38,10,26,12],[38,17,26,19,"options"],[38,24,26,26],[38,25,26,27,"rate"],[38,29,26,31],[38,34,26,36],[38,42,26,44],[38,44,26,46],[39,8,27,12,"message"],[39,15,27,19],[39,16,27,20,"rate"],[39,20,27,24],[39,23,27,27,"options"],[39,30,27,34],[39,31,27,35,"rate"],[39,35,27,39],[40,6,28,8],[41,6,29,8],[41,10,29,12],[41,17,29,19,"options"],[41,24,29,26],[41,25,29,27,"pitch"],[41,30,29,32],[41,35,29,37],[41,43,29,45],[41,45,29,47],[42,8,30,12,"message"],[42,15,30,19],[42,16,30,20,"pitch"],[42,21,30,25],[42,24,30,28,"options"],[42,31,30,35],[42,32,30,36,"pitch"],[42,37,30,41],[43,6,31,8],[44,6,32,8],[44,10,32,12],[44,17,32,19,"options"],[44,24,32,26],[44,25,32,27,"language"],[44,33,32,35],[44,38,32,40],[44,46,32,48],[44,48,32,50],[45,8,33,12,"message"],[45,15,33,19],[45,16,33,20,"lang"],[45,20,33,24],[45,23,33,27,"options"],[45,30,33,34],[45,31,33,35,"language"],[45,39,33,43],[46,6,34,8],[47,6,35,8],[47,10,35,12],[47,17,35,19,"options"],[47,24,35,26],[47,25,35,27,"volume"],[47,31,35,33],[47,36,35,38],[47,44,35,46],[47,46,35,48],[48,8,36,12,"message"],[48,15,36,19],[48,16,36,20,"volume"],[48,22,36,26],[48,25,36,29,"options"],[48,32,36,36],[48,33,36,37,"volume"],[48,39,36,43],[49,6,37,8],[50,6,38,8],[50,10,38,12],[50,23,38,25],[50,27,38,29,"options"],[50,34,38,36],[50,38,38,40,"options"],[50,45,38,47],[50,46,38,48,"_voiceIndex"],[50,57,38,59],[50,61,38,63],[50,65,38,67],[50,67,38,69],[51,8,39,12],[51,14,39,18,"voices"],[51,20,39,24],[51,23,39,27],[51,29,39,33,"getVoices"],[51,38,39,42],[51,39,39,43],[51,40,39,44],[52,8,40,12,"message"],[52,15,40,19],[52,16,40,20,"voice"],[52,21,40,25],[52,24,40,28,"voices"],[52,30,40,34],[52,31,40,35,"Math"],[52,35,40,39],[52,36,40,40,"min"],[52,39,40,43],[52,40,40,44,"voices"],[52,46,40,50],[52,47,40,51,"length"],[52,53,40,57],[52,56,40,60],[52,57,40,61],[52,59,40,63,"Math"],[52,63,40,67],[52,64,40,68,"max"],[52,67,40,71],[52,68,40,72],[52,69,40,73],[52,71,40,75,"options"],[52,78,40,82],[52,79,40,83,"_voiceIndex"],[52,90,40,94],[52,91,40,95],[52,92,40,96],[52,93,40,97],[53,6,41,8],[54,6,42,8],[54,10,42,12],[54,17,42,19,"options"],[54,24,42,26],[54,25,42,27,"voice"],[54,30,42,32],[54,35,42,37],[54,43,42,45],[54,45,42,47],[55,8,43,12],[55,14,43,18,"voices"],[55,20,43,24],[55,23,43,27],[55,29,43,33,"getVoices"],[55,38,43,42],[55,39,43,43],[55,40,43,44],[56,8,44,12,"message"],[56,15,44,19],[56,16,44,20,"voice"],[56,21,44,25],[56,24,45,16,"voices"],[56,30,45,22],[56,31,45,23,"Math"],[56,35,45,27],[56,36,45,28,"max"],[56,39,45,31],[56,40,45,32],[56,41,45,33],[56,43,45,35,"voices"],[56,49,45,41],[56,50,45,42,"findIndex"],[56,59,45,51],[56,60,45,53,"voice"],[56,65,45,58],[56,69,45,63,"voice"],[56,74,45,68],[56,75,45,69,"voiceURI"],[56,83,45,77],[56,88,45,82,"options"],[56,95,45,89],[56,96,45,90,"voice"],[56,101,45,95],[56,102,45,96],[56,103,45,97],[56,104,45,98],[57,6,46,8],[58,6,47,8],[58,10,47,12],[58,17,47,19,"options"],[58,24,47,26],[58,25,47,27,"onResume"],[58,33,47,35],[58,38,47,40],[58,48,47,50],[58,50,47,52],[59,8,48,12,"message"],[59,15,48,19],[59,16,48,20,"onresume"],[59,24,48,28],[59,27,48,31,"options"],[59,34,48,38],[59,35,48,39,"onResume"],[59,43,48,47],[60,6,49,8],[61,6,50,8],[61,10,50,12],[61,17,50,19,"options"],[61,24,50,26],[61,25,50,27,"onMark"],[61,31,50,33],[61,36,50,38],[61,46,50,48],[61,48,50,50],[62,8,51,12,"message"],[62,15,51,19],[62,16,51,20,"onmark"],[62,22,51,26],[62,25,51,29,"options"],[62,32,51,36],[62,33,51,37,"onMark"],[62,39,51,43],[63,6,52,8],[64,6,53,8],[64,10,53,12],[64,17,53,19,"options"],[64,24,53,26],[64,25,53,27,"onBoundary"],[64,35,53,37],[64,40,53,42],[64,50,53,52],[64,52,53,54],[65,8,54,12,"message"],[65,15,54,19],[65,16,54,20,"onboundary"],[65,26,54,30],[65,29,54,33,"options"],[65,36,54,40],[65,37,54,41,"onBoundary"],[65,47,54,51],[66,6,55,8],[67,6,56,8,"message"],[67,13,56,15],[67,14,56,16,"onstart"],[67,21,56,23],[67,24,56,27,"nativeEvent"],[67,35,56,38],[67,39,56,43],[68,8,57,12],[68,12,57,16],[68,13,57,17,"emit"],[68,17,57,21],[68,18,57,22],[68,44,57,48],[68,46,57,50],[69,10,57,52,"id"],[69,12,57,54],[70,10,57,56,"nativeEvent"],[71,8,57,68],[71,9,57,69],[71,10,57,70],[72,6,58,8],[72,7,58,9],[73,6,59,8,"message"],[73,13,59,15],[73,14,59,16,"onend"],[73,19,59,21],[73,22,59,25,"nativeEvent"],[73,33,59,36],[73,37,59,41],[74,8,60,12],[74,12,60,16],[74,13,60,17,"emit"],[74,17,60,21],[74,18,60,22],[74,41,60,45],[74,43,60,47],[75,10,60,49,"id"],[75,12,60,51],[76,10,60,53,"nativeEvent"],[77,8,60,65],[77,9,60,66],[77,10,60,67],[78,6,61,8],[78,7,61,9],[79,6,62,8,"message"],[79,13,62,15],[79,14,62,16,"onpause"],[79,21,62,23],[79,24,62,27,"nativeEvent"],[79,35,62,38],[79,39,62,43],[80,8,63,12],[80,12,63,16],[80,13,63,17,"emit"],[80,17,63,21],[80,18,63,22],[80,44,63,48],[80,46,63,50],[81,10,63,52,"id"],[81,12,63,54],[82,10,63,56,"nativeEvent"],[83,8,63,68],[83,9,63,69],[83,10,63,70],[84,6,64,8],[84,7,64,9],[85,6,65,8,"message"],[85,13,65,15],[85,14,65,16,"onerror"],[85,21,65,23],[85,24,65,27,"nativeEvent"],[85,35,65,38],[85,39,65,43],[86,8,66,12],[86,12,66,16],[86,13,66,17,"emit"],[86,17,66,21],[86,18,66,22],[86,42,66,46],[86,44,66,48],[87,10,66,50,"id"],[87,12,66,52],[88,10,66,54,"nativeEvent"],[89,8,66,66],[89,9,66,67],[89,10,66,68],[90,6,67,8],[90,7,67,9],[91,6,68,8,"message"],[91,13,68,15],[91,14,68,16,"text"],[91,18,68,20],[91,21,68,23,"text"],[91,25,68,27],[92,6,69,8,"window"],[92,12,69,14],[92,13,69,15,"speechSynthesis"],[92,28,69,30],[92,29,69,31,"speak"],[92,34,69,36],[92,35,69,37,"message"],[92,42,69,44],[92,43,69,45],[93,6,70,8],[93,13,70,15,"message"],[93,20,70,22],[94,4,71,4],[95,4,72,4],[95,10,72,10,"getVoices"],[95,19,72,19,"getVoices"],[95,20,72,19],[95,22,72,22],[96,6,73,8],[96,12,73,14,"voices"],[96,18,73,20],[96,21,73,23],[96,27,73,29,"getVoices"],[96,36,73,38],[96,37,73,39],[96,38,73,40],[97,6,74,8],[97,13,74,15,"voices"],[97,19,74,21],[97,20,74,22,"map"],[97,23,74,25],[97,24,74,27,"voice"],[97,29,74,32],[97,34,74,38],[98,8,75,12,"identifier"],[98,18,75,22],[98,20,75,24,"voice"],[98,25,75,29],[98,26,75,30,"voiceURI"],[98,34,75,38],[99,8,76,12,"quality"],[99,15,76,19],[99,17,76,21,"VoiceQuality"],[99,29,76,33],[99,30,76,33,"VoiceQuality"],[99,42,76,33],[99,43,76,34,"Default"],[99,50,76,41],[100,8,77,12,"isDefault"],[100,17,77,21],[100,19,77,23,"voice"],[100,24,77,28],[100,25,77,29,"default"],[100,32,77,36],[101,8,78,12,"language"],[101,16,78,20],[101,18,78,22,"voice"],[101,23,78,27],[101,24,78,28,"lang"],[101,28,78,32],[102,8,79,12,"localService"],[102,20,79,24],[102,22,79,26,"voice"],[102,27,79,31],[102,28,79,32,"localService"],[102,40,79,44],[103,8,80,12,"name"],[103,12,80,16],[103,14,80,18,"voice"],[103,19,80,23],[103,20,80,24,"name"],[103,24,80,28],[104,8,81,12,"voiceURI"],[104,16,81,20],[104,18,81,22,"voice"],[104,23,81,27],[104,24,81,28,"voiceURI"],[105,6,82,8],[105,7,82,9],[105,8,82,10],[105,9,82,11],[106,4,83,4],[107,4,84,4],[107,10,84,10,"isSpeaking"],[107,20,84,20,"isSpeaking"],[107,21,84,20],[107,23,84,23],[108,6,85,8],[108,13,85,15,"window"],[108,19,85,21],[108,20,85,22,"speechSynthesis"],[108,35,85,37],[108,36,85,38,"speaking"],[108,44,85,46],[109,4,86,4],[110,4,87,4],[110,10,87,10,"stop"],[110,14,87,14,"stop"],[110,15,87,14],[110,17,87,17],[111,6,88,8],[111,13,88,15,"window"],[111,19,88,21],[111,20,88,22,"speechSynthesis"],[111,35,88,37],[111,36,88,38,"cancel"],[111,42,88,44],[111,43,88,45],[111,44,88,46],[112,4,89,4],[113,4,90,4],[113,10,90,10,"pause"],[113,15,90,15,"pause"],[113,16,90,15],[113,18,90,18],[114,6,91,8],[114,13,91,15,"window"],[114,19,91,21],[114,20,91,22,"speechSynthesis"],[114,35,91,37],[114,36,91,38,"pause"],[114,41,91,43],[114,42,91,44],[114,43,91,45],[115,4,92,4],[116,4,93,4],[116,10,93,10,"resume"],[116,16,93,16,"resume"],[116,17,93,16],[116,19,93,19],[117,6,94,8],[117,13,94,15,"window"],[117,19,94,21],[117,20,94,22,"speechSynthesis"],[117,35,94,37],[117,36,94,38,"resume"],[117,42,94,44],[117,43,94,45],[117,44,94,46],[118,4,95,4],[119,4,96,4,"maxSpeechInputLength"],[119,24,96,24],[119,27,96,27,"MAX_SPEECH_INPUT_LENGTH"],[119,50,96,50],[120,2,97,0],[121,2,98,0],[121,6,98,0,"_default"],[121,14,98,0],[121,17,98,15],[121,21,98,15,"registerWebModule"],[121,37,98,32],[121,38,98,32,"registerWebModule"],[121,55,98,32],[121,57,98,33,"ExpoSpeech"],[121,67,98,43],[121,69,98,45],[121,81,98,57],[121,82,98,58],[122,0,98,59],[122,3]],"functionMap":{"names":["<global>","getVoices","Promise$argument_0","window.speechSynthesis.onvoiceschanged","ExpoSpeech","ExpoSpeech#speak","voices.findIndex$argument_0","message.onstart","message.onend","message.onpause","message.onerror","ExpoSpeech#getVoices","voices.map$argument_0","ExpoSpeech#isSpeaking","ExpoSpeech#stop","ExpoSpeech#pause","ExpoSpeech#resume"],"mappings":"AAA;ACI;uBCC;iDCQ;SDG;KDC;CDC;AIC;ICC;oDCwB,2CD;0BEW;SFE;wBGC;SHE;0BIC;SJE;0BKC;SLE;KDI;IOC;0BCE;UDQ;KPC;ISC;KTE;IUC;KVE;IWC;KXE;IYC;KZE;CJE"},"hasCjsExports":false},"type":"js/module"}]}