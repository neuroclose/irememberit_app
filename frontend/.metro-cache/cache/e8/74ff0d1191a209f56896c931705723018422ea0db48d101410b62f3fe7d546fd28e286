{"dependencies":[{"name":"./ExpoSecureStore","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":48,"index":48}}],"key":"ZudhOBNf0EF2ra5GBlE3UCprcN0=","exportNames":["*"],"imports":1}},{"name":"./byteCounter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":49},"end":{"line":2,"column":70,"index":119}}],"key":"xUg5IjQU0cu+B0aJJMunpd3JZec=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AFTER_FIRST_UNLOCK\", {\n    enumerable: true,\n    get: function () {\n      return AFTER_FIRST_UNLOCK;\n    }\n  });\n  Object.defineProperty(exports, \"AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY\", {\n    enumerable: true,\n    get: function () {\n      return AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY;\n    }\n  });\n  Object.defineProperty(exports, \"ALWAYS\", {\n    enumerable: true,\n    get: function () {\n      return ALWAYS;\n    }\n  });\n  Object.defineProperty(exports, \"WHEN_PASSCODE_SET_THIS_DEVICE_ONLY\", {\n    enumerable: true,\n    get: function () {\n      return WHEN_PASSCODE_SET_THIS_DEVICE_ONLY;\n    }\n  });\n  Object.defineProperty(exports, \"ALWAYS_THIS_DEVICE_ONLY\", {\n    enumerable: true,\n    get: function () {\n      return ALWAYS_THIS_DEVICE_ONLY;\n    }\n  });\n  Object.defineProperty(exports, \"WHEN_UNLOCKED\", {\n    enumerable: true,\n    get: function () {\n      return WHEN_UNLOCKED;\n    }\n  });\n  Object.defineProperty(exports, \"WHEN_UNLOCKED_THIS_DEVICE_ONLY\", {\n    enumerable: true,\n    get: function () {\n      return WHEN_UNLOCKED_THIS_DEVICE_ONLY;\n    }\n  });\n  exports.isAvailableAsync = isAvailableAsync;\n  exports.deleteItemAsync = deleteItemAsync;\n  exports.getItemAsync = getItemAsync;\n  exports.setItemAsync = setItemAsync;\n  exports.setItem = setItem;\n  exports.getItem = getItem;\n  exports.canUseBiometricAuthentication = canUseBiometricAuthentication;\n  var _ExpoSecureStore = require(_dependencyMap[0], \"./ExpoSecureStore\");\n  var ExpoSecureStore = _interopDefault(_ExpoSecureStore);\n  var _byteCounter = require(_dependencyMap[1], \"./byteCounter\");\n  // @needsAudit\n  /**\n   * The data in the keychain item cannot be accessed after a restart until the device has been\n   * unlocked once by the user. This may be useful if you need to access the item when the phone\n   * is locked.\n   */\n  const AFTER_FIRST_UNLOCK = ExpoSecureStore.default.AFTER_FIRST_UNLOCK;\n  // @needsAudit\n  /**\n   * Similar to `AFTER_FIRST_UNLOCK`, except the entry is not migrated to a new device when restoring\n   * from a backup.\n   */\n  const AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY = ExpoSecureStore.default.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY;\n  // @needsAudit\n  /**\n   * The data in the keychain item can always be accessed regardless of whether the device is locked.\n   * This is the least secure option.\n   *\n   * @deprecated Use an accessibility level that provides some user protection, such as `AFTER_FIRST_UNLOCK`.\n   */\n  const ALWAYS = ExpoSecureStore.default.ALWAYS;\n  // @needsAudit\n  /**\n   * Similar to `WHEN_UNLOCKED_THIS_DEVICE_ONLY`, except the user must have set a passcode in order to\n   * store an entry. If the user removes their passcode, the entry will be deleted.\n   */\n  const WHEN_PASSCODE_SET_THIS_DEVICE_ONLY = ExpoSecureStore.default.WHEN_PASSCODE_SET_THIS_DEVICE_ONLY;\n  // @needsAudit\n  /**\n   * Similar to `ALWAYS`, except the entry is not migrated to a new device when restoring from a backup.\n   *\n   * @deprecated Use an accessibility level that provides some user protection, such as `AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY`.\n   */\n  const ALWAYS_THIS_DEVICE_ONLY = ExpoSecureStore.default.ALWAYS_THIS_DEVICE_ONLY;\n  // @needsAudit\n  /**\n   * The data in the keychain item can be accessed only while the device is unlocked by the user.\n   */\n  const WHEN_UNLOCKED = ExpoSecureStore.default.WHEN_UNLOCKED;\n  // @needsAudit\n  /**\n   * Similar to `WHEN_UNLOCKED`, except the entry is not migrated to a new device when restoring from\n   * a backup.\n   */\n  const WHEN_UNLOCKED_THIS_DEVICE_ONLY = ExpoSecureStore.default.WHEN_UNLOCKED_THIS_DEVICE_ONLY;\n  // @needsAudit\n  /**\n   * Returns whether the SecureStore API is enabled on the current device. This does not check the app\n   * permissions.\n   *\n   * @return Promise which fulfils with a `boolean`, indicating whether the SecureStore API is available\n   * on the current device. Currently, this resolves `true` on Android and iOS only.\n   */\n  async function isAvailableAsync() {\n    return !!ExpoSecureStore.default.getValueWithKeyAsync;\n  }\n  // @needsAudit\n  /**\n   * Delete the value associated with the provided key.\n   *\n   * @param key The key that was used to store the associated value.\n   * @param options An [`SecureStoreOptions`](#securestoreoptions) object.\n   *\n   * @return A promise that rejects if the value can't be deleted.\n   */\n  async function deleteItemAsync(key, options = {}) {\n    ensureValidKey(key);\n    await ExpoSecureStore.default.deleteValueWithKeyAsync(key, options);\n  }\n  // @needsAudit\n  /**\n   * Reads the stored value associated with the provided key.\n   *\n   * @param key The key that was used to store the associated value.\n   * @param options An [`SecureStoreOptions`](#securestoreoptions) object.\n   *\n   * @return A promise that resolves to the previously stored value. It resolves with `null` if there is no entry\n   * for the given key or if the key has been invalidated. It rejects if an error occurs while retrieving the value.\n   *\n   * > Keys are invalidated by the system when biometrics change, such as adding a new fingerprint or changing the face profile used for face recognition.\n   * > After a key has been invalidated, it becomes impossible to read its value.\n   * > This only applies to values stored with `requireAuthentication` set to `true`.\n   */\n  async function getItemAsync(key, options = {}) {\n    ensureValidKey(key);\n    return await ExpoSecureStore.default.getValueWithKeyAsync(key, options);\n  }\n  // @needsAudit\n  /**\n   * Stores a key–value pair.\n   *\n   * @param key The key to associate with the stored value. Keys may contain alphanumeric characters, `.`, `-`, and `_`.\n   * @param value The value to store. Size limit is 2048 bytes.\n   * @param options An [`SecureStoreOptions`](#securestoreoptions) object.\n   *\n   * @return A promise that rejects if value cannot be stored on the device.\n   */\n  async function setItemAsync(key, value, options = {}) {\n    ensureValidKey(key);\n    if (!isValidValue(value)) {\n      throw new Error(`Invalid value provided to SecureStore. Values must be strings; consider JSON-encoding your values if they are serializable.`);\n    }\n    await ExpoSecureStore.default.setValueWithKeyAsync(value, key, options);\n  }\n  /**\n   * Stores a key–value pair synchronously.\n   * > **Note:** This function blocks the JavaScript thread, so the application may not be interactive when the `requireAuthentication` option is set to `true` until the user authenticates.\n   *\n   * @param key The key to associate with the stored value. Keys may contain alphanumeric characters, `.`, `-`, and `_`.\n   * @param value The value to store. Size limit is 2048 bytes.\n   * @param options An [`SecureStoreOptions`](#securestoreoptions) object.\n   *\n   */\n  function setItem(key, value, options = {}) {\n    ensureValidKey(key);\n    if (!isValidValue(value)) {\n      throw new Error(`Invalid value provided to SecureStore. Values must be strings; consider JSON-encoding your values if they are serializable.`);\n    }\n    return ExpoSecureStore.default.setValueWithKeySync(value, key, options);\n  }\n  /**\n   * Synchronously reads the stored value associated with the provided key.\n   * > **Note:** This function blocks the JavaScript thread, so the application may not be interactive when reading a value with `requireAuthentication`\n   * > option set to `true` until the user authenticates.\n   * @param key The key that was used to store the associated value.\n   * @param options An [`SecureStoreOptions`](#securestoreoptions) object.\n   *\n   * @return Previously stored value. It resolves with `null` if there is no entry\n   * for the given key or if the key has been invalidated.\n   */\n  function getItem(key, options = {}) {\n    ensureValidKey(key);\n    return ExpoSecureStore.default.getValueWithKeySync(key, options);\n  }\n  /**\n   * Checks if the value can be saved with `requireAuthentication` option enabled.\n   * @return `true` if the device supports biometric authentication and the enrolled method is sufficiently secure. Otherwise, returns `false`. Always returns false on tvOS.\n   * @platform android\n   * @platform ios\n   */\n  function canUseBiometricAuthentication() {\n    return ExpoSecureStore.default.canUseBiometricAuthentication();\n  }\n  function ensureValidKey(key) {\n    if (!isValidKey(key)) {\n      throw new Error(`Invalid key provided to SecureStore. Keys must not be empty and contain only alphanumeric characters, \".\", \"-\", and \"_\".`);\n    }\n  }\n  function isValidKey(key) {\n    return typeof key === 'string' && /^[\\w.-]+$/.test(key);\n  }\n  function isValidValue(value) {\n    if (typeof value !== 'string') {\n      return false;\n    }\n    if ((0, _byteCounter.byteCountOverLimit)(value, _byteCounter.VALUE_BYTES_LIMIT)) {\n      console.warn(`Value being stored in SecureStore is larger than ${_byteCounter.VALUE_BYTES_LIMIT} bytes and it may not be stored successfully. In a future SDK version, this call may throw an error.`);\n    }\n    return true;\n  }\n});","lineCount":224,"map":[[12,2,9,0,"Object"],[12,8,9,0],[12,9,9,0,"defineProperty"],[12,23,9,0],[12,24,9,0,"exports"],[12,31,9,0],[13,4,9,0,"enumerable"],[13,14,9,0],[14,4,9,0,"get"],[14,7,9,0],[14,18,9,0,"get"],[14,19,9,0],[15,6,9,0],[15,13,9,0,"AFTER_FIRST_UNLOCK"],[15,31,9,0],[16,4,9,0],[17,2,9,0],[18,2,15,0,"Object"],[18,8,15,0],[18,9,15,0,"defineProperty"],[18,23,15,0],[18,24,15,0,"exports"],[18,31,15,0],[19,4,15,0,"enumerable"],[19,14,15,0],[20,4,15,0,"get"],[20,7,15,0],[20,18,15,0,"get"],[20,19,15,0],[21,6,15,0],[21,13,15,0,"AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY"],[21,48,15,0],[22,4,15,0],[23,2,15,0],[24,2,23,0,"Object"],[24,8,23,0],[24,9,23,0,"defineProperty"],[24,23,23,0],[24,24,23,0,"exports"],[24,31,23,0],[25,4,23,0,"enumerable"],[25,14,23,0],[26,4,23,0,"get"],[26,7,23,0],[26,18,23,0,"get"],[26,19,23,0],[27,6,23,0],[27,13,23,0,"ALWAYS"],[27,19,23,0],[28,4,23,0],[29,2,23,0],[30,2,29,0,"Object"],[30,8,29,0],[30,9,29,0,"defineProperty"],[30,23,29,0],[30,24,29,0,"exports"],[30,31,29,0],[31,4,29,0,"enumerable"],[31,14,29,0],[32,4,29,0,"get"],[32,7,29,0],[32,18,29,0,"get"],[32,19,29,0],[33,6,29,0],[33,13,29,0,"WHEN_PASSCODE_SET_THIS_DEVICE_ONLY"],[33,47,29,0],[34,4,29,0],[35,2,29,0],[36,2,36,0,"Object"],[36,8,36,0],[36,9,36,0,"defineProperty"],[36,23,36,0],[36,24,36,0,"exports"],[36,31,36,0],[37,4,36,0,"enumerable"],[37,14,36,0],[38,4,36,0,"get"],[38,7,36,0],[38,18,36,0,"get"],[38,19,36,0],[39,6,36,0],[39,13,36,0,"ALWAYS_THIS_DEVICE_ONLY"],[39,36,36,0],[40,4,36,0],[41,2,36,0],[42,2,41,0,"Object"],[42,8,41,0],[42,9,41,0,"defineProperty"],[42,23,41,0],[42,24,41,0,"exports"],[42,31,41,0],[43,4,41,0,"enumerable"],[43,14,41,0],[44,4,41,0,"get"],[44,7,41,0],[44,18,41,0,"get"],[44,19,41,0],[45,6,41,0],[45,13,41,0,"WHEN_UNLOCKED"],[45,26,41,0],[46,4,41,0],[47,2,41,0],[48,2,47,0,"Object"],[48,8,47,0],[48,9,47,0,"defineProperty"],[48,23,47,0],[48,24,47,0,"exports"],[48,31,47,0],[49,4,47,0,"enumerable"],[49,14,47,0],[50,4,47,0,"get"],[50,7,47,0],[50,18,47,0,"get"],[50,19,47,0],[51,6,47,0],[51,13,47,0,"WHEN_UNLOCKED_THIS_DEVICE_ONLY"],[51,43,47,0],[52,4,47,0],[53,2,47,0],[54,2,56,0,"exports"],[54,9,56,0],[54,10,56,0,"isAvailableAsync"],[54,26,56,0],[54,29,56,0,"isAvailableAsync"],[54,45,56,0],[55,2,68,0,"exports"],[55,9,68,0],[55,10,68,0,"deleteItemAsync"],[55,25,68,0],[55,28,68,0,"deleteItemAsync"],[55,43,68,0],[56,2,86,0,"exports"],[56,9,86,0],[56,10,86,0,"getItemAsync"],[56,22,86,0],[56,25,86,0,"getItemAsync"],[56,37,86,0],[57,2,100,0,"exports"],[57,9,100,0],[57,10,100,0,"setItemAsync"],[57,22,100,0],[57,25,100,0,"setItemAsync"],[57,37,100,0],[58,2,116,0,"exports"],[58,9,116,0],[58,10,116,0,"setItem"],[58,17,116,0],[58,20,116,0,"setItem"],[58,27,116,0],[59,2,133,0,"exports"],[59,9,133,0],[59,10,133,0,"getItem"],[59,17,133,0],[59,20,133,0,"getItem"],[59,27,133,0],[60,2,143,0,"exports"],[60,9,143,0],[60,10,143,0,"canUseBiometricAuthentication"],[60,39,143,0],[60,42,143,0,"canUseBiometricAuthentication"],[60,71,143,0],[61,2,1,0],[61,6,1,0,"_ExpoSecureStore"],[61,22,1,0],[61,25,1,0,"require"],[61,32,1,0],[61,33,1,0,"_dependencyMap"],[61,47,1,0],[62,2,1,0],[62,6,1,0,"ExpoSecureStore"],[62,21,1,0],[62,24,1,0,"_interopDefault"],[62,39,1,0],[62,40,1,0,"_ExpoSecureStore"],[62,56,1,0],[63,2,2,0],[63,6,2,0,"_byteCounter"],[63,18,2,0],[63,21,2,0,"require"],[63,28,2,0],[63,29,2,0,"_dependencyMap"],[63,43,2,0],[64,2,3,0],[65,2,4,0],[66,0,5,0],[67,0,6,0],[68,0,7,0],[69,0,8,0],[70,2,9,7],[70,8,9,13,"AFTER_FIRST_UNLOCK"],[70,26,9,31],[70,29,9,34,"ExpoSecureStore"],[70,44,9,49],[70,45,9,49,"default"],[70,52,9,49],[70,53,9,50,"AFTER_FIRST_UNLOCK"],[70,71,9,68],[71,2,10,0],[72,2,11,0],[73,0,12,0],[74,0,13,0],[75,0,14,0],[76,2,15,7],[76,8,15,13,"AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY"],[76,43,15,48],[76,46,15,51,"ExpoSecureStore"],[76,61,15,66],[76,62,15,66,"default"],[76,69,15,66],[76,70,15,67,"AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY"],[76,105,15,102],[77,2,16,0],[78,2,17,0],[79,0,18,0],[80,0,19,0],[81,0,20,0],[82,0,21,0],[83,0,22,0],[84,2,23,7],[84,8,23,13,"ALWAYS"],[84,14,23,19],[84,17,23,22,"ExpoSecureStore"],[84,32,23,37],[84,33,23,37,"default"],[84,40,23,37],[84,41,23,38,"ALWAYS"],[84,47,23,44],[85,2,24,0],[86,2,25,0],[87,0,26,0],[88,0,27,0],[89,0,28,0],[90,2,29,7],[90,8,29,13,"WHEN_PASSCODE_SET_THIS_DEVICE_ONLY"],[90,42,29,47],[90,45,29,50,"ExpoSecureStore"],[90,60,29,65],[90,61,29,65,"default"],[90,68,29,65],[90,69,29,66,"WHEN_PASSCODE_SET_THIS_DEVICE_ONLY"],[90,103,29,100],[91,2,30,0],[92,2,31,0],[93,0,32,0],[94,0,33,0],[95,0,34,0],[96,0,35,0],[97,2,36,7],[97,8,36,13,"ALWAYS_THIS_DEVICE_ONLY"],[97,31,36,36],[97,34,36,39,"ExpoSecureStore"],[97,49,36,54],[97,50,36,54,"default"],[97,57,36,54],[97,58,36,55,"ALWAYS_THIS_DEVICE_ONLY"],[97,81,36,78],[98,2,37,0],[99,2,38,0],[100,0,39,0],[101,0,40,0],[102,2,41,7],[102,8,41,13,"WHEN_UNLOCKED"],[102,21,41,26],[102,24,41,29,"ExpoSecureStore"],[102,39,41,44],[102,40,41,44,"default"],[102,47,41,44],[102,48,41,45,"WHEN_UNLOCKED"],[102,61,41,58],[103,2,42,0],[104,2,43,0],[105,0,44,0],[106,0,45,0],[107,0,46,0],[108,2,47,7],[108,8,47,13,"WHEN_UNLOCKED_THIS_DEVICE_ONLY"],[108,38,47,43],[108,41,47,46,"ExpoSecureStore"],[108,56,47,61],[108,57,47,61,"default"],[108,64,47,61],[108,65,47,62,"WHEN_UNLOCKED_THIS_DEVICE_ONLY"],[108,95,47,92],[109,2,48,0],[110,2,49,0],[111,0,50,0],[112,0,51,0],[113,0,52,0],[114,0,53,0],[115,0,54,0],[116,0,55,0],[117,2,56,7],[117,17,56,22,"isAvailableAsync"],[117,33,56,38,"isAvailableAsync"],[117,34,56,38],[117,36,56,41],[118,4,57,4],[118,11,57,11],[118,12,57,12],[118,13,57,13,"ExpoSecureStore"],[118,28,57,28],[118,29,57,28,"default"],[118,36,57,28],[118,37,57,29,"getValueWithKeyAsync"],[118,57,57,49],[119,2,58,0],[120,2,59,0],[121,2,60,0],[122,0,61,0],[123,0,62,0],[124,0,63,0],[125,0,64,0],[126,0,65,0],[127,0,66,0],[128,0,67,0],[129,2,68,7],[129,17,68,22,"deleteItemAsync"],[129,32,68,37,"deleteItemAsync"],[129,33,68,38,"key"],[129,36,68,41],[129,38,68,43,"options"],[129,45,68,50],[129,48,68,53],[129,49,68,54],[129,50,68,55],[129,52,68,57],[130,4,69,4,"ensureValidKey"],[130,18,69,18],[130,19,69,19,"key"],[130,22,69,22],[130,23,69,23],[131,4,70,4],[131,10,70,10,"ExpoSecureStore"],[131,25,70,25],[131,26,70,25,"default"],[131,33,70,25],[131,34,70,26,"deleteValueWithKeyAsync"],[131,57,70,49],[131,58,70,50,"key"],[131,61,70,53],[131,63,70,55,"options"],[131,70,70,62],[131,71,70,63],[132,2,71,0],[133,2,72,0],[134,2,73,0],[135,0,74,0],[136,0,75,0],[137,0,76,0],[138,0,77,0],[139,0,78,0],[140,0,79,0],[141,0,80,0],[142,0,81,0],[143,0,82,0],[144,0,83,0],[145,0,84,0],[146,0,85,0],[147,2,86,7],[147,17,86,22,"getItemAsync"],[147,29,86,34,"getItemAsync"],[147,30,86,35,"key"],[147,33,86,38],[147,35,86,40,"options"],[147,42,86,47],[147,45,86,50],[147,46,86,51],[147,47,86,52],[147,49,86,54],[148,4,87,4,"ensureValidKey"],[148,18,87,18],[148,19,87,19,"key"],[148,22,87,22],[148,23,87,23],[149,4,88,4],[149,11,88,11],[149,17,88,17,"ExpoSecureStore"],[149,32,88,32],[149,33,88,32,"default"],[149,40,88,32],[149,41,88,33,"getValueWithKeyAsync"],[149,61,88,53],[149,62,88,54,"key"],[149,65,88,57],[149,67,88,59,"options"],[149,74,88,66],[149,75,88,67],[150,2,89,0],[151,2,90,0],[152,2,91,0],[153,0,92,0],[154,0,93,0],[155,0,94,0],[156,0,95,0],[157,0,96,0],[158,0,97,0],[159,0,98,0],[160,0,99,0],[161,2,100,7],[161,17,100,22,"setItemAsync"],[161,29,100,34,"setItemAsync"],[161,30,100,35,"key"],[161,33,100,38],[161,35,100,40,"value"],[161,40,100,45],[161,42,100,47,"options"],[161,49,100,54],[161,52,100,57],[161,53,100,58],[161,54,100,59],[161,56,100,61],[162,4,101,4,"ensureValidKey"],[162,18,101,18],[162,19,101,19,"key"],[162,22,101,22],[162,23,101,23],[163,4,102,4],[163,8,102,8],[163,9,102,9,"isValidValue"],[163,21,102,21],[163,22,102,22,"value"],[163,27,102,27],[163,28,102,28],[163,30,102,30],[164,6,103,8],[164,12,103,14],[164,16,103,18,"Error"],[164,21,103,23],[164,22,103,24],[164,147,103,149],[164,148,103,150],[165,4,104,4],[166,4,105,4],[166,10,105,10,"ExpoSecureStore"],[166,25,105,25],[166,26,105,25,"default"],[166,33,105,25],[166,34,105,26,"setValueWithKeyAsync"],[166,54,105,46],[166,55,105,47,"value"],[166,60,105,52],[166,62,105,54,"key"],[166,65,105,57],[166,67,105,59,"options"],[166,74,105,66],[166,75,105,67],[167,2,106,0],[168,2,107,0],[169,0,108,0],[170,0,109,0],[171,0,110,0],[172,0,111,0],[173,0,112,0],[174,0,113,0],[175,0,114,0],[176,0,115,0],[177,2,116,7],[177,11,116,16,"setItem"],[177,18,116,23,"setItem"],[177,19,116,24,"key"],[177,22,116,27],[177,24,116,29,"value"],[177,29,116,34],[177,31,116,36,"options"],[177,38,116,43],[177,41,116,46],[177,42,116,47],[177,43,116,48],[177,45,116,50],[178,4,117,4,"ensureValidKey"],[178,18,117,18],[178,19,117,19,"key"],[178,22,117,22],[178,23,117,23],[179,4,118,4],[179,8,118,8],[179,9,118,9,"isValidValue"],[179,21,118,21],[179,22,118,22,"value"],[179,27,118,27],[179,28,118,28],[179,30,118,30],[180,6,119,8],[180,12,119,14],[180,16,119,18,"Error"],[180,21,119,23],[180,22,119,24],[180,147,119,149],[180,148,119,150],[181,4,120,4],[182,4,121,4],[182,11,121,11,"ExpoSecureStore"],[182,26,121,26],[182,27,121,26,"default"],[182,34,121,26],[182,35,121,27,"setValueWithKeySync"],[182,54,121,46],[182,55,121,47,"value"],[182,60,121,52],[182,62,121,54,"key"],[182,65,121,57],[182,67,121,59,"options"],[182,74,121,66],[182,75,121,67],[183,2,122,0],[184,2,123,0],[185,0,124,0],[186,0,125,0],[187,0,126,0],[188,0,127,0],[189,0,128,0],[190,0,129,0],[191,0,130,0],[192,0,131,0],[193,0,132,0],[194,2,133,7],[194,11,133,16,"getItem"],[194,18,133,23,"getItem"],[194,19,133,24,"key"],[194,22,133,27],[194,24,133,29,"options"],[194,31,133,36],[194,34,133,39],[194,35,133,40],[194,36,133,41],[194,38,133,43],[195,4,134,4,"ensureValidKey"],[195,18,134,18],[195,19,134,19,"key"],[195,22,134,22],[195,23,134,23],[196,4,135,4],[196,11,135,11,"ExpoSecureStore"],[196,26,135,26],[196,27,135,26,"default"],[196,34,135,26],[196,35,135,27,"getValueWithKeySync"],[196,54,135,46],[196,55,135,47,"key"],[196,58,135,50],[196,60,135,52,"options"],[196,67,135,59],[196,68,135,60],[197,2,136,0],[198,2,137,0],[199,0,138,0],[200,0,139,0],[201,0,140,0],[202,0,141,0],[203,0,142,0],[204,2,143,7],[204,11,143,16,"canUseBiometricAuthentication"],[204,40,143,45,"canUseBiometricAuthentication"],[204,41,143,45],[204,43,143,48],[205,4,144,4],[205,11,144,11,"ExpoSecureStore"],[205,26,144,26],[205,27,144,26,"default"],[205,34,144,26],[205,35,144,27,"canUseBiometricAuthentication"],[205,64,144,56],[205,65,144,57],[205,66,144,58],[206,2,145,0],[207,2,146,0],[207,11,146,9,"ensureValidKey"],[207,25,146,23,"ensureValidKey"],[207,26,146,24,"key"],[207,29,146,27],[207,31,146,29],[208,4,147,4],[208,8,147,8],[208,9,147,9,"isValidKey"],[208,19,147,19],[208,20,147,20,"key"],[208,23,147,23],[208,24,147,24],[208,26,147,26],[209,6,148,8],[209,12,148,14],[209,16,148,18,"Error"],[209,21,148,23],[209,22,148,24],[209,144,148,146],[209,145,148,147],[210,4,149,4],[211,2,150,0],[212,2,151,0],[212,11,151,9,"isValidKey"],[212,21,151,19,"isValidKey"],[212,22,151,20,"key"],[212,25,151,23],[212,27,151,25],[213,4,152,4],[213,11,152,11],[213,18,152,18,"key"],[213,21,152,21],[213,26,152,26],[213,34,152,34],[213,38,152,38],[213,49,152,49],[213,50,152,50,"test"],[213,54,152,54],[213,55,152,55,"key"],[213,58,152,58],[213,59,152,59],[214,2,153,0],[215,2,154,0],[215,11,154,9,"isValidValue"],[215,23,154,21,"isValidValue"],[215,24,154,22,"value"],[215,29,154,27],[215,31,154,29],[216,4,155,4],[216,8,155,8],[216,15,155,15,"value"],[216,20,155,20],[216,25,155,25],[216,33,155,33],[216,35,155,35],[217,6,156,8],[217,13,156,15],[217,18,156,20],[218,4,157,4],[219,4,158,4],[219,8,158,8],[219,12,158,8,"byteCountOverLimit"],[219,24,158,26],[219,25,158,26,"byteCountOverLimit"],[219,43,158,26],[219,45,158,27,"value"],[219,50,158,32],[219,52,158,34,"VALUE_BYTES_LIMIT"],[219,64,158,51],[219,65,158,51,"VALUE_BYTES_LIMIT"],[219,82,158,51],[219,83,158,52],[219,85,158,54],[220,6,159,8,"console"],[220,13,159,15],[220,14,159,16,"warn"],[220,18,159,20],[220,19,159,21],[220,71,159,73,"VALUE_BYTES_LIMIT"],[220,83,159,90],[220,84,159,90,"VALUE_BYTES_LIMIT"],[220,101,159,90],[220,203,159,192],[220,204,159,193],[221,4,160,4],[222,4,161,4],[222,11,161,11],[222,15,161,15],[223,2,162,0],[224,0,162,1],[224,3]],"functionMap":{"names":["<global>","isAvailableAsync","deleteItemAsync","getItemAsync","setItemAsync","setItem","getItem","canUseBiometricAuthentication","ensureValidKey","isValidKey","isValidValue"],"mappings":"AAA;OCuD;CDE;OEU;CFG;OGe;CHG;OIW;CJM;OKU;CLM;OMW;CNG;OOO;CPE;AQC;CRI;ASC;CTE;AUC;CVQ"},"hasCjsExports":false},"type":"js/module"}]}