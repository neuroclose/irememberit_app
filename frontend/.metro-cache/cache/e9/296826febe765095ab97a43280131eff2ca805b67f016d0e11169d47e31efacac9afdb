{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"./thenable.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":20},"end":{"line":2,"column":47,"index":67}}],"key":"kKA5IQ5mf6XoWFagMsmQasyMyhE=","exportNames":["*"],"imports":1}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":68},"end":{"line":3,"column":34,"index":102}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"state\"],\n    _excluded2 = [\"fetchStatus\"]; // src/hydration.ts\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"defaultShouldDehydrateMutation\", {\n    enumerable: true,\n    get: function () {\n      return defaultShouldDehydrateMutation;\n    }\n  });\n  Object.defineProperty(exports, \"defaultShouldDehydrateQuery\", {\n    enumerable: true,\n    get: function () {\n      return defaultShouldDehydrateQuery;\n    }\n  });\n  Object.defineProperty(exports, \"dehydrate\", {\n    enumerable: true,\n    get: function () {\n      return dehydrate;\n    }\n  });\n  Object.defineProperty(exports, \"hydrate\", {\n    enumerable: true,\n    get: function () {\n      return hydrate;\n    }\n  });\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _thenableJs = require(_dependencyMap[1], \"./thenable.js\");\n  var _utilsJs = require(_dependencyMap[2], \"./utils.js\");\n  function defaultTransformerFn(data) {\n    return data;\n  }\n  function dehydrateMutation(mutation) {\n    return Object.assign({\n      mutationKey: mutation.options.mutationKey,\n      state: mutation.state\n    }, mutation.options.scope && {\n      scope: mutation.options.scope\n    }, mutation.meta && {\n      meta: mutation.meta\n    });\n  }\n  function dehydrateQuery(query, serializeData, shouldRedactErrors) {\n    const promise = query.promise?.then(serializeData).catch(error => {\n      if (!shouldRedactErrors(error)) {\n        return Promise.reject(error);\n      }\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(`A query that was dehydrated as pending ended up rejecting. [${query.queryHash}]: ${error}; The error will be redacted in production builds`);\n      }\n      return Promise.reject(new Error(\"redacted\"));\n    });\n    promise?.catch(_utilsJs.noop);\n    return Object.assign({\n      dehydratedAt: Date.now(),\n      state: Object.assign({}, query.state, query.state.data !== void 0 && {\n        data: serializeData(query.state.data)\n      }),\n      queryKey: query.queryKey,\n      queryHash: query.queryHash\n    }, query.state.status === \"pending\" && {\n      promise\n    }, query.meta && {\n      meta: query.meta\n    });\n  }\n  function defaultShouldDehydrateMutation(mutation) {\n    return mutation.state.isPaused;\n  }\n  function defaultShouldDehydrateQuery(query) {\n    return query.state.status === \"success\";\n  }\n  function defaultShouldRedactErrors(_) {\n    return true;\n  }\n  function dehydrate(client, options = {}) {\n    const filterMutation = options.shouldDehydrateMutation ?? client.getDefaultOptions().dehydrate?.shouldDehydrateMutation ?? defaultShouldDehydrateMutation;\n    const mutations = client.getMutationCache().getAll().flatMap(mutation => filterMutation(mutation) ? [dehydrateMutation(mutation)] : []);\n    const filterQuery = options.shouldDehydrateQuery ?? client.getDefaultOptions().dehydrate?.shouldDehydrateQuery ?? defaultShouldDehydrateQuery;\n    const shouldRedactErrors = options.shouldRedactErrors ?? client.getDefaultOptions().dehydrate?.shouldRedactErrors ?? defaultShouldRedactErrors;\n    const serializeData = options.serializeData ?? client.getDefaultOptions().dehydrate?.serializeData ?? defaultTransformerFn;\n    const queries = client.getQueryCache().getAll().flatMap(query => filterQuery(query) ? [dehydrateQuery(query, serializeData, shouldRedactErrors)] : []);\n    return {\n      mutations,\n      queries\n    };\n  }\n  function hydrate(client, dehydratedState, options) {\n    if (typeof dehydratedState !== \"object\" || dehydratedState === null) {\n      return;\n    }\n    const mutationCache = client.getMutationCache();\n    const queryCache = client.getQueryCache();\n    const deserializeData = options?.defaultOptions?.deserializeData ?? client.getDefaultOptions().hydrate?.deserializeData ?? defaultTransformerFn;\n    const mutations = dehydratedState.mutations || [];\n    const queries = dehydratedState.queries || [];\n    mutations.forEach(_ref => {\n      let {\n          state\n        } = _ref,\n        mutationOptions = (0, _objectWithoutPropertiesLoose.default)(_ref, _excluded);\n      mutationCache.build(client, Object.assign({}, client.getDefaultOptions().hydrate?.mutations, options?.defaultOptions?.mutations, mutationOptions), state);\n    });\n    queries.forEach(({\n      queryKey,\n      state,\n      queryHash,\n      meta,\n      promise,\n      dehydratedAt\n    }) => {\n      const syncData = promise ? (0, _thenableJs.tryResolveSync)(promise) : void 0;\n      const rawData = state.data === void 0 ? syncData?.data : state.data;\n      const data = rawData === void 0 ? rawData : deserializeData(rawData);\n      let query = queryCache.get(queryHash);\n      const existingQueryIsPending = query?.state.status === \"pending\";\n      const existingQueryIsFetching = query?.state.fetchStatus === \"fetching\";\n      if (query) {\n        const hasNewerSyncData = syncData &&\n        // We only need this undefined check to handle older dehydration\n        // payloads that might not have dehydratedAt\n        dehydratedAt !== void 0 && dehydratedAt > query.state.dataUpdatedAt;\n        if (state.dataUpdatedAt > query.state.dataUpdatedAt || hasNewerSyncData) {\n          const serializedState = (0, _objectWithoutPropertiesLoose.default)(state, _excluded2);\n          query.setState(Object.assign({}, serializedState, {\n            data\n          }));\n        }\n      } else {\n        query = queryCache.build(client, Object.assign({}, client.getDefaultOptions().hydrate?.queries, options?.defaultOptions?.queries, {\n          queryKey,\n          queryHash,\n          meta\n        }), // Reset fetch status to idle to avoid\n        // query being stuck in fetching state upon hydration\n        Object.assign({}, state, {\n          data,\n          fetchStatus: \"idle\",\n          status: data !== void 0 ? \"success\" : state.status\n        }));\n      }\n      if (promise && !existingQueryIsPending && !existingQueryIsFetching && (\n      // Only hydrate if dehydration is newer than any existing data,\n      // this is always true for new queries\n      dehydratedAt === void 0 || dehydratedAt > query.state.dataUpdatedAt)) {\n        query.fetch(void 0, {\n          // RSC transformed promises are not thenable\n          initialPromise: Promise.resolve(promise).then(deserializeData)\n        }).catch(_utilsJs.noop);\n      }\n    });\n  }\n});","lineCount":165,"map":[[5,34,1,0],[6,2,1,0,"Object"],[6,8,1,0],[6,9,1,0,"defineProperty"],[6,23,1,0],[6,24,1,0,"exports"],[6,31,1,0],[7,4,1,0,"value"],[7,9,1,0],[8,2,1,0],[9,2,1,0],[9,11,1,0,"_interopDefault"],[9,27,1,0,"e"],[9,28,1,0],[10,4,1,0],[10,11,1,0,"e"],[10,12,1,0],[10,16,1,0,"e"],[10,17,1,0],[10,18,1,0,"__esModule"],[10,28,1,0],[10,31,1,0,"e"],[10,32,1,0],[11,6,1,0,"default"],[11,13,1,0],[11,15,1,0,"e"],[12,4,1,0],[13,2,1,0],[14,2,136,0,"Object"],[14,8,136,0],[14,9,136,0,"defineProperty"],[14,23,136,0],[14,24,136,0,"exports"],[14,31,136,0],[15,4,136,0,"enumerable"],[15,14,136,0],[16,4,136,0,"get"],[16,7,136,0],[16,18,136,0,"get"],[16,19,136,0],[17,6,136,0],[17,13,137,2,"defaultShouldDehydrateMutation"],[17,43,137,32],[18,4,137,32],[19,2,137,32],[20,2,136,0,"Object"],[20,8,136,0],[20,9,136,0,"defineProperty"],[20,23,136,0],[20,24,136,0,"exports"],[20,31,136,0],[21,4,136,0,"enumerable"],[21,14,136,0],[22,4,136,0,"get"],[22,7,136,0],[22,18,136,0,"get"],[22,19,136,0],[23,6,136,0],[23,13,138,2,"defaultShouldDehydrateQuery"],[23,40,138,29],[24,4,138,29],[25,2,138,29],[26,2,136,0,"Object"],[26,8,136,0],[26,9,136,0,"defineProperty"],[26,23,136,0],[26,24,136,0,"exports"],[26,31,136,0],[27,4,136,0,"enumerable"],[27,14,136,0],[28,4,136,0,"get"],[28,7,136,0],[28,18,136,0,"get"],[28,19,136,0],[29,6,136,0],[29,13,139,2,"dehydrate"],[29,22,139,11],[30,4,139,11],[31,2,139,11],[32,2,136,0,"Object"],[32,8,136,0],[32,9,136,0,"defineProperty"],[32,23,136,0],[32,24,136,0,"exports"],[32,31,136,0],[33,4,136,0,"enumerable"],[33,14,136,0],[34,4,136,0,"get"],[34,7,136,0],[34,18,136,0,"get"],[34,19,136,0],[35,6,136,0],[35,13,140,2,"hydrate"],[35,20,140,9],[36,4,140,9],[37,2,140,9],[38,2,141,2],[38,6,141,2,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[38,54,141,2],[38,57,141,2,"require"],[38,64,141,2],[38,65,141,2,"_dependencyMap"],[38,79,141,2],[39,2,141,2],[39,6,141,2,"_objectWithoutPropertiesLoose"],[39,35,141,2],[39,38,141,2,"_interopDefault"],[39,53,141,2],[39,54,141,2,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[39,102,141,2],[40,2,2,0],[40,6,2,0,"_thenableJs"],[40,17,2,0],[40,20,2,0,"require"],[40,27,2,0],[40,28,2,0,"_dependencyMap"],[40,42,2,0],[41,2,3,0],[41,6,3,0,"_utilsJs"],[41,14,3,0],[41,17,3,0,"require"],[41,24,3,0],[41,25,3,0,"_dependencyMap"],[41,39,3,0],[42,2,4,0],[42,11,4,9,"defaultTransformerFn"],[42,31,4,29,"defaultTransformerFn"],[42,32,4,30,"data"],[42,36,4,34],[42,38,4,36],[43,4,5,2],[43,11,5,9,"data"],[43,15,5,13],[44,2,6,0],[45,2,7,0],[45,11,7,9,"dehydrateMutation"],[45,28,7,26,"dehydrateMutation"],[45,29,7,27,"mutation"],[45,37,7,35],[45,39,7,37],[46,4,8,2],[46,11,8,2,"Object"],[46,17,8,2],[46,18,8,2,"assign"],[46,24,8,2],[47,6,9,4,"mutationKey"],[47,17,9,15],[47,19,9,17,"mutation"],[47,27,9,25],[47,28,9,26,"options"],[47,35,9,33],[47,36,9,34,"mutationKey"],[47,47,9,45],[48,6,10,4,"state"],[48,11,10,9],[48,13,10,11,"mutation"],[48,21,10,19],[48,22,10,20,"state"],[49,4,10,25],[49,7,11,7,"mutation"],[49,15,11,15],[49,16,11,16,"options"],[49,23,11,23],[49,24,11,24,"scope"],[49,29,11,29],[49,33,11,33],[50,6,11,35,"scope"],[50,11,11,40],[50,13,11,42,"mutation"],[50,21,11,50],[50,22,11,51,"options"],[50,29,11,58],[50,30,11,59,"scope"],[51,4,11,65],[51,5,11,66],[51,7,12,7,"mutation"],[51,15,12,15],[51,16,12,16,"meta"],[51,20,12,20],[51,24,12,24],[52,6,12,26,"meta"],[52,10,12,30],[52,12,12,32,"mutation"],[52,20,12,40],[52,21,12,41,"meta"],[53,4,12,46],[53,5,12,47],[54,2,14,0],[55,2,15,0],[55,11,15,9,"dehydrateQuery"],[55,25,15,23,"dehydrateQuery"],[55,26,15,24,"query"],[55,31,15,29],[55,33,15,31,"serializeData"],[55,46,15,44],[55,48,15,46,"shouldRedactErrors"],[55,66,15,64],[55,68,15,66],[56,4,16,2],[56,10,16,8,"promise"],[56,17,16,15],[56,20,16,18,"query"],[56,25,16,23],[56,26,16,24,"promise"],[56,33,16,31],[56,35,16,33,"then"],[56,39,16,37],[56,40,16,38,"serializeData"],[56,53,16,51],[56,54,16,52],[56,55,16,53,"catch"],[56,60,16,58],[56,61,16,60,"error"],[56,66,16,65],[56,70,16,70],[57,6,17,4],[57,10,17,8],[57,11,17,9,"shouldRedactErrors"],[57,29,17,27],[57,30,17,28,"error"],[57,35,17,33],[57,36,17,34],[57,38,17,36],[58,8,18,6],[58,15,18,13,"Promise"],[58,22,18,20],[58,23,18,21,"reject"],[58,29,18,27],[58,30,18,28,"error"],[58,35,18,33],[58,36,18,34],[59,6,19,4],[60,6,20,4],[60,10,20,8,"process"],[60,17,20,15],[60,18,20,16,"env"],[60,21,20,19],[60,22,20,20,"NODE_ENV"],[60,30,20,28],[60,35,20,33],[60,47,20,45],[60,49,20,47],[61,8,21,6,"console"],[61,15,21,13],[61,16,21,14,"error"],[61,21,21,19],[61,22,22,8],[61,85,22,71,"query"],[61,90,22,76],[61,91,22,77,"queryHash"],[61,100,22,86],[61,106,22,92,"error"],[61,111,22,97],[61,162,23,6],[61,163,23,7],[62,6,24,4],[63,6,25,4],[63,13,25,11,"Promise"],[63,20,25,18],[63,21,25,19,"reject"],[63,27,25,25],[63,28,25,26],[63,32,25,30,"Error"],[63,37,25,35],[63,38,25,36],[63,48,25,46],[63,49,25,47],[63,50,25,48],[64,4,26,2],[64,5,26,3],[64,6,26,4],[65,4,27,2,"promise"],[65,11,27,9],[65,13,27,11,"catch"],[65,18,27,16],[65,19,27,17,"noop"],[65,27,27,21],[65,28,27,21,"noop"],[65,32,27,21],[65,33,27,22],[66,4,28,2],[66,11,28,2,"Object"],[66,17,28,2],[66,18,28,2,"assign"],[66,24,28,2],[67,6,29,4,"dehydratedAt"],[67,18,29,16],[67,20,29,18,"Date"],[67,24,29,22],[67,25,29,23,"now"],[67,28,29,26],[67,29,29,27],[67,30,29,28],[68,6,30,4,"state"],[68,11,30,9],[68,13,30,9,"Object"],[68,19,30,9],[68,20,30,9,"assign"],[68,26,30,9],[68,31,31,9,"query"],[68,36,31,14],[68,37,31,15,"state"],[68,42,31,20],[68,44,32,9,"query"],[68,49,32,14],[68,50,32,15,"state"],[68,55,32,20],[68,56,32,21,"data"],[68,60,32,25],[68,65,32,30],[68,70,32,35],[68,71,32,36],[68,75,32,40],[69,8,33,8,"data"],[69,12,33,12],[69,14,33,14,"serializeData"],[69,27,33,27],[69,28,33,28,"query"],[69,33,33,33],[69,34,33,34,"state"],[69,39,33,39],[69,40,33,40,"data"],[69,44,33,44],[70,6,34,6],[70,7,34,7],[70,8,35,5],[71,6,36,4,"queryKey"],[71,14,36,12],[71,16,36,14,"query"],[71,21,36,19],[71,22,36,20,"queryKey"],[71,30,36,28],[72,6,37,4,"queryHash"],[72,15,37,13],[72,17,37,15,"query"],[72,22,37,20],[72,23,37,21,"queryHash"],[73,4,37,30],[73,7,38,7,"query"],[73,12,38,12],[73,13,38,13,"state"],[73,18,38,18],[73,19,38,19,"status"],[73,25,38,25],[73,30,38,30],[73,39,38,39],[73,43,38,43],[74,6,39,6,"promise"],[75,4,40,4],[75,5,40,5],[75,7,41,7,"query"],[75,12,41,12],[75,13,41,13,"meta"],[75,17,41,17],[75,21,41,21],[76,6,41,23,"meta"],[76,10,41,27],[76,12,41,29,"query"],[76,17,41,34],[76,18,41,35,"meta"],[77,4,41,40],[77,5,41,41],[78,2,43,0],[79,2,44,0],[79,11,44,9,"defaultShouldDehydrateMutation"],[79,41,44,39,"defaultShouldDehydrateMutation"],[79,42,44,40,"mutation"],[79,50,44,48],[79,52,44,50],[80,4,45,2],[80,11,45,9,"mutation"],[80,19,45,17],[80,20,45,18,"state"],[80,25,45,23],[80,26,45,24,"isPaused"],[80,34,45,32],[81,2,46,0],[82,2,47,0],[82,11,47,9,"defaultShouldDehydrateQuery"],[82,38,47,36,"defaultShouldDehydrateQuery"],[82,39,47,37,"query"],[82,44,47,42],[82,46,47,44],[83,4,48,2],[83,11,48,9,"query"],[83,16,48,14],[83,17,48,15,"state"],[83,22,48,20],[83,23,48,21,"status"],[83,29,48,27],[83,34,48,32],[83,43,48,41],[84,2,49,0],[85,2,50,0],[85,11,50,9,"defaultShouldRedactErrors"],[85,36,50,34,"defaultShouldRedactErrors"],[85,37,50,35,"_"],[85,38,50,36],[85,40,50,38],[86,4,51,2],[86,11,51,9],[86,15,51,13],[87,2,52,0],[88,2,53,0],[88,11,53,9,"dehydrate"],[88,20,53,18,"dehydrate"],[88,21,53,19,"client"],[88,27,53,25],[88,29,53,27,"options"],[88,36,53,34],[88,39,53,37],[88,40,53,38],[88,41,53,39],[88,43,53,41],[89,4,54,2],[89,10,54,8,"filterMutation"],[89,24,54,22],[89,27,54,25,"options"],[89,34,54,32],[89,35,54,33,"shouldDehydrateMutation"],[89,58,54,56],[89,62,54,60,"client"],[89,68,54,66],[89,69,54,67,"getDefaultOptions"],[89,86,54,84],[89,87,54,85],[89,88,54,86],[89,89,54,87,"dehydrate"],[89,98,54,96],[89,100,54,98,"shouldDehydrateMutation"],[89,123,54,121],[89,127,54,125,"defaultShouldDehydrateMutation"],[89,157,54,155],[90,4,55,2],[90,10,55,8,"mutations"],[90,19,55,17],[90,22,55,20,"client"],[90,28,55,26],[90,29,55,27,"getMutationCache"],[90,45,55,43],[90,46,55,44],[90,47,55,45],[90,48,55,46,"getAll"],[90,54,55,52],[90,55,55,53],[90,56,55,54],[90,57,55,55,"flatMap"],[90,64,55,62],[90,65,56,5,"mutation"],[90,73,56,13],[90,77,56,18,"filterMutation"],[90,91,56,32],[90,92,56,33,"mutation"],[90,100,56,41],[90,101,56,42],[90,104,56,45],[90,105,56,46,"dehydrateMutation"],[90,122,56,63],[90,123,56,64,"mutation"],[90,131,56,72],[90,132,56,73],[90,133,56,74],[90,136,56,77],[90,138,57,2],[90,139,57,3],[91,4,58,2],[91,10,58,8,"filterQuery"],[91,21,58,19],[91,24,58,22,"options"],[91,31,58,29],[91,32,58,30,"shouldDehydrateQuery"],[91,52,58,50],[91,56,58,54,"client"],[91,62,58,60],[91,63,58,61,"getDefaultOptions"],[91,80,58,78],[91,81,58,79],[91,82,58,80],[91,83,58,81,"dehydrate"],[91,92,58,90],[91,94,58,92,"shouldDehydrateQuery"],[91,114,58,112],[91,118,58,116,"defaultShouldDehydrateQuery"],[91,145,58,143],[92,4,59,2],[92,10,59,8,"shouldRedactErrors"],[92,28,59,26],[92,31,59,29,"options"],[92,38,59,36],[92,39,59,37,"shouldRedactErrors"],[92,57,59,55],[92,61,59,59,"client"],[92,67,59,65],[92,68,59,66,"getDefaultOptions"],[92,85,59,83],[92,86,59,84],[92,87,59,85],[92,88,59,86,"dehydrate"],[92,97,59,95],[92,99,59,97,"shouldRedactErrors"],[92,117,59,115],[92,121,59,119,"defaultShouldRedactErrors"],[92,146,59,144],[93,4,60,2],[93,10,60,8,"serializeData"],[93,23,60,21],[93,26,60,24,"options"],[93,33,60,31],[93,34,60,32,"serializeData"],[93,47,60,45],[93,51,60,49,"client"],[93,57,60,55],[93,58,60,56,"getDefaultOptions"],[93,75,60,73],[93,76,60,74],[93,77,60,75],[93,78,60,76,"dehydrate"],[93,87,60,85],[93,89,60,87,"serializeData"],[93,102,60,100],[93,106,60,104,"defaultTransformerFn"],[93,126,60,124],[94,4,61,2],[94,10,61,8,"queries"],[94,17,61,15],[94,20,61,18,"client"],[94,26,61,24],[94,27,61,25,"getQueryCache"],[94,40,61,38],[94,41,61,39],[94,42,61,40],[94,43,61,41,"getAll"],[94,49,61,47],[94,50,61,48],[94,51,61,49],[94,52,61,50,"flatMap"],[94,59,61,57],[94,60,62,5,"query"],[94,65,62,10],[94,69,62,15,"filterQuery"],[94,80,62,26],[94,81,62,27,"query"],[94,86,62,32],[94,87,62,33],[94,90,62,36],[94,91,62,37,"dehydrateQuery"],[94,105,62,51],[94,106,62,52,"query"],[94,111,62,57],[94,113,62,59,"serializeData"],[94,126,62,72],[94,128,62,74,"shouldRedactErrors"],[94,146,62,92],[94,147,62,93],[94,148,62,94],[94,151,62,97],[94,153,63,2],[94,154,63,3],[95,4,64,2],[95,11,64,9],[96,6,64,11,"mutations"],[96,15,64,20],[97,6,64,22,"queries"],[98,4,64,30],[98,5,64,31],[99,2,65,0],[100,2,66,0],[100,11,66,9,"hydrate"],[100,18,66,16,"hydrate"],[100,19,66,17,"client"],[100,25,66,23],[100,27,66,25,"dehydratedState"],[100,42,66,40],[100,44,66,42,"options"],[100,51,66,49],[100,53,66,51],[101,4,67,2],[101,8,67,6],[101,15,67,13,"dehydratedState"],[101,30,67,28],[101,35,67,33],[101,43,67,41],[101,47,67,45,"dehydratedState"],[101,62,67,60],[101,67,67,65],[101,71,67,69],[101,73,67,71],[102,6,68,4],[103,4,69,2],[104,4,70,2],[104,10,70,8,"mutationCache"],[104,23,70,21],[104,26,70,24,"client"],[104,32,70,30],[104,33,70,31,"getMutationCache"],[104,49,70,47],[104,50,70,48],[104,51,70,49],[105,4,71,2],[105,10,71,8,"queryCache"],[105,20,71,18],[105,23,71,21,"client"],[105,29,71,27],[105,30,71,28,"getQueryCache"],[105,43,71,41],[105,44,71,42],[105,45,71,43],[106,4,72,2],[106,10,72,8,"deserializeData"],[106,25,72,23],[106,28,72,26,"options"],[106,35,72,33],[106,37,72,35,"defaultOptions"],[106,51,72,49],[106,53,72,51,"deserializeData"],[106,68,72,66],[106,72,72,70,"client"],[106,78,72,76],[106,79,72,77,"getDefaultOptions"],[106,96,72,94],[106,97,72,95],[106,98,72,96],[106,99,72,97,"hydrate"],[106,106,72,104],[106,108,72,106,"deserializeData"],[106,123,72,121],[106,127,72,125,"defaultTransformerFn"],[106,147,72,145],[107,4,73,2],[107,10,73,8,"mutations"],[107,19,73,17],[107,22,73,20,"dehydratedState"],[107,37,73,35],[107,38,73,36,"mutations"],[107,47,73,45],[107,51,73,49],[107,53,73,51],[108,4,74,2],[108,10,74,8,"queries"],[108,17,74,15],[108,20,74,18,"dehydratedState"],[108,35,74,33],[108,36,74,34,"queries"],[108,43,74,41],[108,47,74,45],[108,49,74,47],[109,4,75,2,"mutations"],[109,13,75,11],[109,14,75,12,"forEach"],[109,21,75,19],[109,22,75,20,"_ref"],[109,26,75,20],[109,30,75,55],[110,6,75,55],[110,10,75,21],[111,10,75,23,"state"],[112,8,75,49],[112,9,75,50],[112,12,75,50,"_ref"],[112,16,75,50],[113,8,75,33,"mutationOptions"],[113,23,75,48],[113,30,75,48,"_objectWithoutPropertiesLoose"],[113,59,75,48],[113,60,75,48,"default"],[113,67,75,48],[113,69,75,48,"_ref"],[113,73,75,48],[113,75,75,48,"_excluded"],[113,84,75,48],[114,6,76,4,"mutationCache"],[114,19,76,17],[114,20,76,18,"build"],[114,25,76,23],[114,26,77,6,"client"],[114,32,77,12],[114,34,77,12,"Object"],[114,40,77,12],[114,41,77,12,"assign"],[114,47,77,12],[114,52,79,11,"client"],[114,58,79,17],[114,59,79,18,"getDefaultOptions"],[114,76,79,35],[114,77,79,36],[114,78,79,37],[114,79,79,38,"hydrate"],[114,86,79,45],[114,88,79,47,"mutations"],[114,97,79,56],[114,99,80,11,"options"],[114,106,80,18],[114,108,80,20,"defaultOptions"],[114,122,80,34],[114,124,80,36,"mutations"],[114,133,80,45],[114,135,81,11,"mutationOptions"],[114,150,81,26],[114,153,83,6,"state"],[114,158,84,4],[114,159,84,5],[115,4,85,2],[115,5,85,3],[115,6,85,4],[116,4,86,2,"queries"],[116,11,86,9],[116,12,86,10,"forEach"],[116,19,86,17],[116,20,87,4],[116,21,87,5],[117,6,87,7,"queryKey"],[117,14,87,15],[118,6,87,17,"state"],[118,11,87,22],[119,6,87,24,"queryHash"],[119,15,87,33],[120,6,87,35,"meta"],[120,10,87,39],[121,6,87,41,"promise"],[121,13,87,48],[122,6,87,50,"dehydratedAt"],[123,4,87,63],[123,5,87,64],[123,10,87,69],[124,6,88,6],[124,12,88,12,"syncData"],[124,20,88,20],[124,23,88,23,"promise"],[124,30,88,30],[124,33,88,33],[124,37,88,33,"tryResolveSync"],[124,48,88,47],[124,49,88,47,"tryResolveSync"],[124,63,88,47],[124,65,88,48,"promise"],[124,72,88,55],[124,73,88,56],[124,76,88,59],[124,81,88,64],[124,82,88,65],[125,6,89,6],[125,12,89,12,"rawData"],[125,19,89,19],[125,22,89,22,"state"],[125,27,89,27],[125,28,89,28,"data"],[125,32,89,32],[125,37,89,37],[125,42,89,42],[125,43,89,43],[125,46,89,46,"syncData"],[125,54,89,54],[125,56,89,56,"data"],[125,60,89,60],[125,63,89,63,"state"],[125,68,89,68],[125,69,89,69,"data"],[125,73,89,73],[126,6,90,6],[126,12,90,12,"data"],[126,16,90,16],[126,19,90,19,"rawData"],[126,26,90,26],[126,31,90,31],[126,36,90,36],[126,37,90,37],[126,40,90,40,"rawData"],[126,47,90,47],[126,50,90,50,"deserializeData"],[126,65,90,65],[126,66,90,66,"rawData"],[126,73,90,73],[126,74,90,74],[127,6,91,6],[127,10,91,10,"query"],[127,15,91,15],[127,18,91,18,"queryCache"],[127,28,91,28],[127,29,91,29,"get"],[127,32,91,32],[127,33,91,33,"queryHash"],[127,42,91,42],[127,43,91,43],[128,6,92,6],[128,12,92,12,"existingQueryIsPending"],[128,34,92,34],[128,37,92,37,"query"],[128,42,92,42],[128,44,92,44,"state"],[128,49,92,49],[128,50,92,50,"status"],[128,56,92,56],[128,61,92,61],[128,70,92,70],[129,6,93,6],[129,12,93,12,"existingQueryIsFetching"],[129,35,93,35],[129,38,93,38,"query"],[129,43,93,43],[129,45,93,45,"state"],[129,50,93,50],[129,51,93,51,"fetchStatus"],[129,62,93,62],[129,67,93,67],[129,77,93,77],[130,6,94,6],[130,10,94,10,"query"],[130,15,94,15],[130,17,94,17],[131,8,95,8],[131,14,95,14,"hasNewerSyncData"],[131,30,95,30],[131,33,95,33,"syncData"],[131,41,95,41],[132,8,95,45],[133,8,96,8],[134,8,97,8,"dehydratedAt"],[134,20,97,20],[134,25,97,25],[134,30,97,30],[134,31,97,31],[134,35,97,35,"dehydratedAt"],[134,47,97,47],[134,50,97,50,"query"],[134,55,97,55],[134,56,97,56,"state"],[134,61,97,61],[134,62,97,62,"dataUpdatedAt"],[134,75,97,75],[135,8,98,8],[135,12,98,12,"state"],[135,17,98,17],[135,18,98,18,"dataUpdatedAt"],[135,31,98,31],[135,34,98,34,"query"],[135,39,98,39],[135,40,98,40,"state"],[135,45,98,45],[135,46,98,46,"dataUpdatedAt"],[135,59,98,59],[135,63,98,63,"hasNewerSyncData"],[135,79,98,79],[135,81,98,81],[136,10,99,10],[136,16,99,44,"serializedState"],[136,31,99,59],[136,38,99,59,"_objectWithoutPropertiesLoose"],[136,67,99,59],[136,68,99,59,"default"],[136,75,99,59],[136,77,99,64,"state"],[136,82,99,69],[136,84,99,69,"_excluded2"],[136,94,99,69],[137,10,100,10,"query"],[137,15,100,15],[137,16,100,16,"setState"],[137,24,100,24],[137,25,100,24,"Object"],[137,31,100,24],[137,32,100,24,"assign"],[137,38,100,24],[137,43,101,15,"serializedState"],[137,58,101,30],[138,12,102,12,"data"],[139,10,102,16],[139,12,103,11],[139,13,103,12],[140,8,104,8],[141,6,105,6],[141,7,105,7],[141,13,105,13],[142,8,106,8,"query"],[142,13,106,13],[142,16,106,16,"queryCache"],[142,26,106,26],[142,27,106,27,"build"],[142,32,106,32],[142,33,107,10,"client"],[142,39,107,16],[142,41,107,16,"Object"],[142,47,107,16],[142,48,107,16,"assign"],[142,54,107,16],[142,59,109,15,"client"],[142,65,109,21],[142,66,109,22,"getDefaultOptions"],[142,83,109,39],[142,84,109,40],[142,85,109,41],[142,86,109,42,"hydrate"],[142,93,109,49],[142,95,109,51,"queries"],[142,102,109,58],[142,104,110,15,"options"],[142,111,110,22],[142,113,110,24,"defaultOptions"],[142,127,110,38],[142,129,110,40,"queries"],[142,136,110,47],[143,10,111,12,"queryKey"],[143,18,111,20],[144,10,112,12,"queryHash"],[144,19,112,21],[145,10,113,12,"meta"],[146,8,113,16],[146,12,115,10],[147,8,116,10],[148,8,116,10,"Object"],[148,14,116,10],[148,15,116,10,"assign"],[148,21,116,10],[148,26,118,15,"state"],[148,31,118,20],[149,10,119,12,"data"],[149,14,119,16],[150,10,120,12,"fetchStatus"],[150,21,120,23],[150,23,120,25],[150,29,120,31],[151,10,121,12,"status"],[151,16,121,18],[151,18,121,20,"data"],[151,22,121,24],[151,27,121,29],[151,32,121,34],[151,33,121,35],[151,36,121,38],[151,45,121,47],[151,48,121,50,"state"],[151,53,121,55],[151,54,121,56,"status"],[152,8,121,62],[152,10,123,8],[152,11,123,9],[153,6,124,6],[154,6,125,6],[154,10,125,10,"promise"],[154,17,125,17],[154,21,125,21],[154,22,125,22,"existingQueryIsPending"],[154,44,125,44],[154,48,125,48],[154,49,125,49,"existingQueryIsFetching"],[154,72,125,72],[155,6,125,76],[156,6,126,6],[157,6,127,7,"dehydratedAt"],[157,18,127,19],[157,23,127,24],[157,28,127,29],[157,29,127,30],[157,33,127,34,"dehydratedAt"],[157,45,127,46],[157,48,127,49,"query"],[157,53,127,54],[157,54,127,55,"state"],[157,59,127,60],[157,60,127,61,"dataUpdatedAt"],[157,73,127,74],[157,74,127,75],[157,76,127,77],[158,8,128,8,"query"],[158,13,128,13],[158,14,128,14,"fetch"],[158,19,128,19],[158,20,128,20],[158,25,128,25],[158,26,128,26],[158,28,128,28],[159,10,129,10],[160,10,130,10,"initialPromise"],[160,24,130,24],[160,26,130,26,"Promise"],[160,33,130,33],[160,34,130,34,"resolve"],[160,41,130,41],[160,42,130,42,"promise"],[160,49,130,49],[160,50,130,50],[160,51,130,51,"then"],[160,55,130,55],[160,56,130,56,"deserializeData"],[160,71,130,71],[161,8,131,8],[161,9,131,9],[161,10,131,10],[161,11,131,11,"catch"],[161,16,131,16],[161,17,131,17,"noop"],[161,25,131,21],[161,26,131,21,"noop"],[161,30,131,21],[161,31,131,22],[162,6,132,6],[163,4,133,4],[163,5,134,2],[163,6,134,3],[164,2,135,0],[165,0,135,1],[165,3]],"functionMap":{"names":["<global>","defaultTransformerFn","dehydrateMutation","dehydrateQuery","query.promise.then._catch$argument_0","defaultShouldDehydrateMutation","defaultShouldDehydrateQuery","defaultShouldRedactErrors","dehydrate","client.getMutationCache.getAll.flatMap$argument_0","client.getQueryCache.getAll.flatMap$argument_0","hydrate","mutations.forEach$argument_0","queries.forEach$argument_0"],"mappings":"AAA;ACG;CDE;AEC;CFO;AGC;2DCC;GDU;CHiB;AKC;CLE;AMC;CNE;AOC;CPE;AQC;ICG,2ED;IEM,+FF;CRG;AWC;oBCS;GDU;IEE;KF8C;CXE"},"hasCjsExports":false},"type":"js/module"}]}