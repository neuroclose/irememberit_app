{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.processWordCloudQuestion = processWordCloudQuestion;\n  exports.checkWordCloudAnswer = checkWordCloudAnswer;\n  /**\n   * Word Cloud Question Processor\n   * Generates word clouds with decoys based on stage progression\n   */\n\n  /**\n   * Calculate number of decoy words based on stage\n   * Early stages have fewer decoys, later stages have more\n   */\n  function getDecoyCount(stage, wordCount) {\n    // Stage 1-3: 2-3 decoys\n    // Stage 4-6: 4-5 decoys\n    // Stage 7-9: 6-8 decoys\n    const baseDecoys = Math.min(Math.floor(stage / 3) + 2, wordCount);\n    return Math.min(baseDecoys, Math.floor(wordCount * 0.5)); // Max 50% decoys\n  }\n\n  /**\n   * Generate decoy words that are similar to the actual words\n   */\n  function generateWordCloudDecoys(words, stage, allModuleWords) {\n    const decoyCount = getDecoyCount(stage, words.length);\n    const decoys = [];\n    const usedWords = new Set(words.map(w => w.toLowerCase()));\n\n    // Common word pool for decoys\n    const commonWords = ['the', 'a', 'an', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'do', 'does', 'did', 'will', 'would', 'should', 'can', 'could', 'may', 'might', 'must', 'shall', 'you', 'I', 'we', 'they', 'he', 'she', 'it', 'my', 'your', 'his', 'her', 'their', 'our', 'its', 'this', 'that', 'these', 'those', 'at', 'in', 'on', 'to', 'for', 'with', 'from', 'by', 'about', 'like', 'through', 'over', 'before', 'after', 'not', 'no', 'yes', 'but', 'or', 'and', 'so'];\n\n    // Build candidate pool from module words and common words\n    const candidatePool = [...(allModuleWords || []), ...commonWords].filter(w => !usedWords.has(w.toLowerCase())).filter((w, idx, self) => self.indexOf(w) === idx); // Remove duplicates\n\n    // Shuffle and select decoys\n    const shuffled = candidatePool.sort(() => Math.random() - 0.5);\n    for (let i = 0; i < Math.min(decoyCount, shuffled.length); i++) {\n      if (!usedWords.has(shuffled[i].toLowerCase())) {\n        decoys.push(shuffled[i]);\n        usedWords.add(shuffled[i].toLowerCase());\n      }\n    }\n\n    // If we still need more decoys, create variations\n    while (decoys.length < decoyCount) {\n      const randomWord = words[Math.floor(Math.random() * words.length)];\n      const variation = randomWord + 's'; // Simple pluralization\n      if (!usedWords.has(variation.toLowerCase())) {\n        decoys.push(variation);\n        usedWords.add(variation.toLowerCase());\n      }\n    }\n    return decoys;\n  }\n\n  /**\n   * Process a text phrase into a word cloud question\n   */\n  function processWordCloudQuestion(originalText, stage, allModuleWords) {\n    // Split text into words\n    const cleanText = originalText.trim();\n    const words = cleanText.split(/\\s+/).filter(w => w.length > 0);\n\n    // Generate decoys\n    const decoys = generateWordCloudDecoys(words, stage, allModuleWords);\n    return {\n      words,\n      decoys,\n      correctOrder: words,\n      stage,\n      originalText: cleanText\n    };\n  }\n\n  /**\n   * Calculate Levenshtein distance (edit distance) between two word arrays\n   * This gives us a more accurate measure of how close the user was\n   */\n  function calculateEditDistance(arr1, arr2) {\n    const m = arr1.length;\n    const n = arr2.length;\n    const dp = Array(m + 1).fill(null).map(() => Array(n + 1).fill(0));\n\n    // Initialize base cases\n    for (let i = 0; i <= m; i++) dp[i][0] = i;\n    for (let j = 0; j <= n; j++) dp[0][j] = j;\n\n    // Fill the DP table\n    for (let i = 1; i <= m; i++) {\n      for (let j = 1; j <= n; j++) {\n        if (arr1[i - 1].toLowerCase() === arr2[j - 1].toLowerCase()) {\n          dp[i][j] = dp[i - 1][j - 1]; // No operation needed\n        } else {\n          dp[i][j] = Math.min(dp[i - 1][j] + 1,\n          // Deletion\n          dp[i][j - 1] + 1,\n          // Insertion\n          dp[i - 1][j - 1] + 1 // Substitution\n          );\n        }\n      }\n    }\n    return dp[m][n];\n  }\n\n  /**\n   * Check if the user's word order is correct\n   */\n  function checkWordCloudAnswer(processedQuestion, userOrder) {\n    const correctWords = processedQuestion.correctOrder;\n\n    // Check exact match (case-insensitive)\n    const exactMatch = userOrder.length === correctWords.length && userOrder.every((word, index) => word.toLowerCase() === correctWords[index].toLowerCase());\n\n    // Calculate accuracy using edit distance\n    // This gives a more accurate representation of how close the user was\n    const editDistance = calculateEditDistance(userOrder, correctWords);\n    const maxLength = Math.max(userOrder.length, correctWords.length);\n\n    // Accuracy = 1 - (editDistance / maxLength)\n    // This means if they got everything right, accuracy = 100%\n    // If they got 20 out of 21 words right, accuracy â‰ˆ 95%\n    const accuracy = maxLength > 0 ? (maxLength - editDistance) / maxLength * 100 : 0;\n\n    // Calculate points\n    const basePoints = 10;\n    const stageMultiplier = processedQuestion.stage;\n    const pointsEarned = exactMatch ? Math.round(basePoints * stageMultiplier) : 0;\n    return {\n      correct: exactMatch,\n      accuracy,\n      correctOrder: correctWords,\n      pointsEarned\n    };\n  }\n});","lineCount":141,"map":[[7,2,82,0,"exports"],[7,9,82,0],[7,10,82,0,"processWordCloudQuestion"],[7,34,82,0],[7,37,82,0,"processWordCloudQuestion"],[7,61,82,0],[8,2,137,0,"exports"],[8,9,137,0],[8,10,137,0,"checkWordCloudAnswer"],[8,30,137,0],[8,33,137,0,"checkWordCloudAnswer"],[8,53,137,0],[9,2,1,0],[10,0,2,0],[11,0,3,0],[12,0,4,0],[14,2,14,0],[15,0,15,0],[16,0,16,0],[17,0,17,0],[18,2,18,0],[18,11,18,9,"getDecoyCount"],[18,24,18,22,"getDecoyCount"],[18,25,18,23,"stage"],[18,30,18,36],[18,32,18,38,"wordCount"],[18,41,18,55],[18,43,18,65],[19,4,19,2],[20,4,20,2],[21,4,21,2],[22,4,22,2],[22,10,22,8,"baseDecoys"],[22,20,22,18],[22,23,22,21,"Math"],[22,27,22,25],[22,28,22,26,"min"],[22,31,22,29],[22,32,22,30,"Math"],[22,36,22,34],[22,37,22,35,"floor"],[22,42,22,40],[22,43,22,41,"stage"],[22,48,22,46],[22,51,22,49],[22,52,22,50],[22,53,22,51],[22,56,22,54],[22,57,22,55],[22,59,22,57,"wordCount"],[22,68,22,66],[22,69,22,67],[23,4,23,2],[23,11,23,9,"Math"],[23,15,23,13],[23,16,23,14,"min"],[23,19,23,17],[23,20,23,18,"baseDecoys"],[23,30,23,28],[23,32,23,30,"Math"],[23,36,23,34],[23,37,23,35,"floor"],[23,42,23,40],[23,43,23,41,"wordCount"],[23,52,23,50],[23,55,23,53],[23,58,23,56],[23,59,23,57],[23,60,23,58],[23,61,23,59],[23,62,23,60],[24,2,24,0],[26,2,26,0],[27,0,27,0],[28,0,28,0],[29,2,29,0],[29,11,29,9,"generateWordCloudDecoys"],[29,34,29,32,"generateWordCloudDecoys"],[29,35,30,2,"words"],[29,40,30,17],[29,42,31,2,"stage"],[29,47,31,15],[29,49,32,2,"allModuleWords"],[29,63,32,27],[29,65,33,12],[30,4,34,2],[30,10,34,8,"decoyCount"],[30,20,34,18],[30,23,34,21,"getDecoyCount"],[30,36,34,34],[30,37,34,35,"stage"],[30,42,34,40],[30,44,34,42,"words"],[30,49,34,47],[30,50,34,48,"length"],[30,56,34,54],[30,57,34,55],[31,4,35,2],[31,10,35,8,"decoys"],[31,16,35,24],[31,19,35,27],[31,21,35,29],[32,4,36,2],[32,10,36,8,"usedWords"],[32,19,36,17],[32,22,36,20],[32,26,36,24,"Set"],[32,29,36,27],[32,30,36,28,"words"],[32,35,36,33],[32,36,36,34,"map"],[32,39,36,37],[32,40,36,38,"w"],[32,41,36,39],[32,45,36,43,"w"],[32,46,36,44],[32,47,36,45,"toLowerCase"],[32,58,36,56],[32,59,36,57],[32,60,36,58],[32,61,36,59],[32,62,36,60],[34,4,38,2],[35,4,39,2],[35,10,39,8,"commonWords"],[35,21,39,19],[35,24,39,22],[35,25,40,4],[35,30,40,9],[35,32,40,11],[35,35,40,14],[35,37,40,16],[35,41,40,20],[35,43,40,22],[35,47,40,26],[35,49,40,28],[35,54,40,33],[35,56,40,35],[35,61,40,40],[35,63,40,42],[35,69,40,48],[35,71,40,50],[35,75,40,54],[35,77,40,56],[35,83,40,62],[35,85,40,64],[35,92,40,71],[35,94,41,4],[35,100,41,10],[35,102,41,12],[35,107,41,17],[35,109,41,19],[35,114,41,24],[35,116,41,26],[35,120,41,30],[35,122,41,32],[35,128,41,38],[35,130,41,40],[35,135,41,45],[35,137,41,47],[35,143,41,53],[35,145,41,55],[35,152,41,62],[35,154,41,64],[35,162,41,72],[35,164,42,4],[35,169,42,9],[35,171,42,11],[35,178,42,18],[35,180,42,20],[35,185,42,25],[35,187,42,27],[35,194,42,34],[35,196,42,36],[35,202,42,42],[35,204,42,44],[35,211,42,51],[35,213,43,4],[35,218,43,9],[35,220,43,11],[35,223,43,14],[35,225,43,16],[35,229,43,20],[35,231,43,22],[35,237,43,28],[35,239,43,30],[35,243,43,34],[35,245,43,36],[35,250,43,41],[35,252,43,43],[35,256,43,47],[35,258,44,4],[35,262,44,8],[35,264,44,10],[35,270,44,16],[35,272,44,18],[35,277,44,23],[35,279,44,25],[35,284,44,30],[35,286,44,32],[35,293,44,39],[35,295,44,41],[35,300,44,46],[35,302,44,48],[35,307,44,53],[35,309,45,4],[35,315,45,10],[35,317,45,12],[35,323,45,18],[35,325,45,20],[35,332,45,27],[35,334,45,29],[35,341,45,36],[35,343,46,4],[35,347,46,8],[35,349,46,10],[35,353,46,14],[35,355,46,16],[35,359,46,20],[35,361,46,22],[35,365,46,26],[35,367,46,28],[35,372,46,33],[35,374,46,35],[35,380,46,41],[35,382,46,43],[35,388,46,49],[35,390,46,51],[35,394,46,55],[35,396,47,4],[35,403,47,11],[35,405,47,13],[35,411,47,19],[35,413,47,21],[35,422,47,30],[35,424,47,32],[35,430,47,38],[35,432,47,40],[35,440,47,48],[35,442,47,50],[35,449,47,57],[35,451,48,4],[35,456,48,9],[35,458,48,11],[35,462,48,15],[35,464,48,17],[35,469,48,22],[35,471,48,24],[35,476,48,29],[35,478,48,31],[35,482,48,35],[35,484,48,37],[35,489,48,42],[35,491,48,44],[35,495,48,48],[35,496,49,3],[37,4,51,2],[38,4,52,2],[38,10,52,8,"candidatePool"],[38,23,52,21],[38,26,52,24],[38,27,52,25],[38,31,52,29,"allModuleWords"],[38,45,52,43],[38,49,52,47],[38,51,52,49],[38,52,52,50],[38,54,52,52],[38,57,52,55,"commonWords"],[38,68,52,66],[38,69,52,67],[38,70,53,5,"filter"],[38,76,53,11],[38,77,53,12,"w"],[38,78,53,13],[38,82,53,17],[38,83,53,18,"usedWords"],[38,92,53,27],[38,93,53,28,"has"],[38,96,53,31],[38,97,53,32,"w"],[38,98,53,33],[38,99,53,34,"toLowerCase"],[38,110,53,45],[38,111,53,46],[38,112,53,47],[38,113,53,48],[38,114,53,49],[38,115,54,5,"filter"],[38,121,54,11],[38,122,54,12],[38,123,54,13,"w"],[38,124,54,14],[38,126,54,16,"idx"],[38,129,54,19],[38,131,54,21,"self"],[38,135,54,25],[38,140,54,30,"self"],[38,144,54,34],[38,145,54,35,"indexOf"],[38,152,54,42],[38,153,54,43,"w"],[38,154,54,44],[38,155,54,45],[38,160,54,50,"idx"],[38,163,54,53],[38,164,54,54],[38,165,54,55],[38,166,54,56],[40,4,56,2],[41,4,57,2],[41,10,57,8,"shuffled"],[41,18,57,16],[41,21,57,19,"candidatePool"],[41,34,57,32],[41,35,57,33,"sort"],[41,39,57,37],[41,40,57,38],[41,46,57,44,"Math"],[41,50,57,48],[41,51,57,49,"random"],[41,57,57,55],[41,58,57,56],[41,59,57,57],[41,62,57,60],[41,65,57,63],[41,66,57,64],[42,4,59,2],[42,9,59,7],[42,13,59,11,"i"],[42,14,59,12],[42,17,59,15],[42,18,59,16],[42,20,59,18,"i"],[42,21,59,19],[42,24,59,22,"Math"],[42,28,59,26],[42,29,59,27,"min"],[42,32,59,30],[42,33,59,31,"decoyCount"],[42,43,59,41],[42,45,59,43,"shuffled"],[42,53,59,51],[42,54,59,52,"length"],[42,60,59,58],[42,61,59,59],[42,63,59,61,"i"],[42,64,59,62],[42,66,59,64],[42,68,59,66],[43,6,60,4],[43,10,60,8],[43,11,60,9,"usedWords"],[43,20,60,18],[43,21,60,19,"has"],[43,24,60,22],[43,25,60,23,"shuffled"],[43,33,60,31],[43,34,60,32,"i"],[43,35,60,33],[43,36,60,34],[43,37,60,35,"toLowerCase"],[43,48,60,46],[43,49,60,47],[43,50,60,48],[43,51,60,49],[43,53,60,51],[44,8,61,6,"decoys"],[44,14,61,12],[44,15,61,13,"push"],[44,19,61,17],[44,20,61,18,"shuffled"],[44,28,61,26],[44,29,61,27,"i"],[44,30,61,28],[44,31,61,29],[44,32,61,30],[45,8,62,6,"usedWords"],[45,17,62,15],[45,18,62,16,"add"],[45,21,62,19],[45,22,62,20,"shuffled"],[45,30,62,28],[45,31,62,29,"i"],[45,32,62,30],[45,33,62,31],[45,34,62,32,"toLowerCase"],[45,45,62,43],[45,46,62,44],[45,47,62,45],[45,48,62,46],[46,6,63,4],[47,4,64,2],[49,4,66,2],[50,4,67,2],[50,11,67,9,"decoys"],[50,17,67,15],[50,18,67,16,"length"],[50,24,67,22],[50,27,67,25,"decoyCount"],[50,37,67,35],[50,39,67,37],[51,6,68,4],[51,12,68,10,"randomWord"],[51,22,68,20],[51,25,68,23,"words"],[51,30,68,28],[51,31,68,29,"Math"],[51,35,68,33],[51,36,68,34,"floor"],[51,41,68,39],[51,42,68,40,"Math"],[51,46,68,44],[51,47,68,45,"random"],[51,53,68,51],[51,54,68,52],[51,55,68,53],[51,58,68,56,"words"],[51,63,68,61],[51,64,68,62,"length"],[51,70,68,68],[51,71,68,69],[51,72,68,70],[52,6,69,4],[52,12,69,10,"variation"],[52,21,69,19],[52,24,69,22,"randomWord"],[52,34,69,32],[52,37,69,35],[52,40,69,38],[52,41,69,39],[52,42,69,40],[53,6,70,4],[53,10,70,8],[53,11,70,9,"usedWords"],[53,20,70,18],[53,21,70,19,"has"],[53,24,70,22],[53,25,70,23,"variation"],[53,34,70,32],[53,35,70,33,"toLowerCase"],[53,46,70,44],[53,47,70,45],[53,48,70,46],[53,49,70,47],[53,51,70,49],[54,8,71,6,"decoys"],[54,14,71,12],[54,15,71,13,"push"],[54,19,71,17],[54,20,71,18,"variation"],[54,29,71,27],[54,30,71,28],[55,8,72,6,"usedWords"],[55,17,72,15],[55,18,72,16,"add"],[55,21,72,19],[55,22,72,20,"variation"],[55,31,72,29],[55,32,72,30,"toLowerCase"],[55,43,72,41],[55,44,72,42],[55,45,72,43],[55,46,72,44],[56,6,73,4],[57,4,74,2],[58,4,76,2],[58,11,76,9,"decoys"],[58,17,76,15],[59,2,77,0],[61,2,79,0],[62,0,80,0],[63,0,81,0],[64,2,82,7],[64,11,82,16,"processWordCloudQuestion"],[64,35,82,40,"processWordCloudQuestion"],[64,36,83,2,"originalText"],[64,48,83,22],[64,50,84,2,"stage"],[64,55,84,15],[64,57,85,2,"allModuleWords"],[64,71,85,27],[64,73,86,22],[65,4,87,2],[66,4,88,2],[66,10,88,8,"cleanText"],[66,19,88,17],[66,22,88,20,"originalText"],[66,34,88,32],[66,35,88,33,"trim"],[66,39,88,37],[66,40,88,38],[66,41,88,39],[67,4,89,2],[67,10,89,8,"words"],[67,15,89,13],[67,18,89,16,"cleanText"],[67,27,89,25],[67,28,89,26,"split"],[67,33,89,31],[67,34,89,32],[67,39,89,37],[67,40,89,38],[67,41,89,39,"filter"],[67,47,89,45],[67,48,89,46,"w"],[67,49,89,47],[67,53,89,51,"w"],[67,54,89,52],[67,55,89,53,"length"],[67,61,89,59],[67,64,89,62],[67,65,89,63],[67,66,89,64],[69,4,91,2],[70,4,92,2],[70,10,92,8,"decoys"],[70,16,92,14],[70,19,92,17,"generateWordCloudDecoys"],[70,42,92,40],[70,43,92,41,"words"],[70,48,92,46],[70,50,92,48,"stage"],[70,55,92,53],[70,57,92,55,"allModuleWords"],[70,71,92,69],[70,72,92,70],[71,4,94,2],[71,11,94,9],[72,6,95,4,"words"],[72,11,95,9],[73,6,96,4,"decoys"],[73,12,96,10],[74,6,97,4,"correctOrder"],[74,18,97,16],[74,20,97,18,"words"],[74,25,97,23],[75,6,98,4,"stage"],[75,11,98,9],[76,6,99,4,"originalText"],[76,18,99,16],[76,20,99,18,"cleanText"],[77,4,100,2],[77,5,100,3],[78,2,101,0],[80,2,103,0],[81,0,104,0],[82,0,105,0],[83,0,106,0],[84,2,107,0],[84,11,107,9,"calculateEditDistance"],[84,32,107,30,"calculateEditDistance"],[84,33,107,31,"arr1"],[84,37,107,45],[84,39,107,47,"arr2"],[84,43,107,61],[84,45,107,71],[85,4,108,2],[85,10,108,8,"m"],[85,11,108,9],[85,14,108,12,"arr1"],[85,18,108,16],[85,19,108,17,"length"],[85,25,108,23],[86,4,109,2],[86,10,109,8,"n"],[86,11,109,9],[86,14,109,12,"arr2"],[86,18,109,16],[86,19,109,17,"length"],[86,25,109,23],[87,4,110,2],[87,10,110,8,"dp"],[87,12,110,22],[87,15,110,25,"Array"],[87,20,110,30],[87,21,110,31,"m"],[87,22,110,32],[87,25,110,35],[87,26,110,36],[87,27,110,37],[87,28,110,38,"fill"],[87,32,110,42],[87,33,110,43],[87,37,110,47],[87,38,110,48],[87,39,110,49,"map"],[87,42,110,52],[87,43,110,53],[87,49,110,59,"Array"],[87,54,110,64],[87,55,110,65,"n"],[87,56,110,66],[87,59,110,69],[87,60,110,70],[87,61,110,71],[87,62,110,72,"fill"],[87,66,110,76],[87,67,110,77],[87,68,110,78],[87,69,110,79],[87,70,110,80],[89,4,112,2],[90,4,113,2],[90,9,113,7],[90,13,113,11,"i"],[90,14,113,12],[90,17,113,15],[90,18,113,16],[90,20,113,18,"i"],[90,21,113,19],[90,25,113,23,"m"],[90,26,113,24],[90,28,113,26,"i"],[90,29,113,27],[90,31,113,29],[90,33,113,31,"dp"],[90,35,113,33],[90,36,113,34,"i"],[90,37,113,35],[90,38,113,36],[90,39,113,37],[90,40,113,38],[90,41,113,39],[90,44,113,42,"i"],[90,45,113,43],[91,4,114,2],[91,9,114,7],[91,13,114,11,"j"],[91,14,114,12],[91,17,114,15],[91,18,114,16],[91,20,114,18,"j"],[91,21,114,19],[91,25,114,23,"n"],[91,26,114,24],[91,28,114,26,"j"],[91,29,114,27],[91,31,114,29],[91,33,114,31,"dp"],[91,35,114,33],[91,36,114,34],[91,37,114,35],[91,38,114,36],[91,39,114,37,"j"],[91,40,114,38],[91,41,114,39],[91,44,114,42,"j"],[91,45,114,43],[93,4,116,2],[94,4,117,2],[94,9,117,7],[94,13,117,11,"i"],[94,14,117,12],[94,17,117,15],[94,18,117,16],[94,20,117,18,"i"],[94,21,117,19],[94,25,117,23,"m"],[94,26,117,24],[94,28,117,26,"i"],[94,29,117,27],[94,31,117,29],[94,33,117,31],[95,6,118,4],[95,11,118,9],[95,15,118,13,"j"],[95,16,118,14],[95,19,118,17],[95,20,118,18],[95,22,118,20,"j"],[95,23,118,21],[95,27,118,25,"n"],[95,28,118,26],[95,30,118,28,"j"],[95,31,118,29],[95,33,118,31],[95,35,118,33],[96,8,119,6],[96,12,119,10,"arr1"],[96,16,119,14],[96,17,119,15,"i"],[96,18,119,16],[96,21,119,19],[96,22,119,20],[96,23,119,21],[96,24,119,22,"toLowerCase"],[96,35,119,33],[96,36,119,34],[96,37,119,35],[96,42,119,40,"arr2"],[96,46,119,44],[96,47,119,45,"j"],[96,48,119,46],[96,51,119,49],[96,52,119,50],[96,53,119,51],[96,54,119,52,"toLowerCase"],[96,65,119,63],[96,66,119,64],[96,67,119,65],[96,69,119,67],[97,10,120,8,"dp"],[97,12,120,10],[97,13,120,11,"i"],[97,14,120,12],[97,15,120,13],[97,16,120,14,"j"],[97,17,120,15],[97,18,120,16],[97,21,120,19,"dp"],[97,23,120,21],[97,24,120,22,"i"],[97,25,120,23],[97,28,120,26],[97,29,120,27],[97,30,120,28],[97,31,120,29,"j"],[97,32,120,30],[97,35,120,33],[97,36,120,34],[97,37,120,35],[97,38,120,36],[97,39,120,37],[98,8,121,6],[98,9,121,7],[98,15,121,13],[99,10,122,8,"dp"],[99,12,122,10],[99,13,122,11,"i"],[99,14,122,12],[99,15,122,13],[99,16,122,14,"j"],[99,17,122,15],[99,18,122,16],[99,21,122,19,"Math"],[99,25,122,23],[99,26,122,24,"min"],[99,29,122,27],[99,30,123,10,"dp"],[99,32,123,12],[99,33,123,13,"i"],[99,34,123,14],[99,37,123,17],[99,38,123,18],[99,39,123,19],[99,40,123,20,"j"],[99,41,123,21],[99,42,123,22],[99,45,123,25],[99,46,123,26],[100,10,123,32],[101,10,124,10,"dp"],[101,12,124,12],[101,13,124,13,"i"],[101,14,124,14],[101,15,124,15],[101,16,124,16,"j"],[101,17,124,17],[101,20,124,20],[101,21,124,21],[101,22,124,22],[101,25,124,25],[101,26,124,26],[102,10,124,32],[103,10,125,10,"dp"],[103,12,125,12],[103,13,125,13,"i"],[103,14,125,14],[103,17,125,17],[103,18,125,18],[103,19,125,19],[103,20,125,20,"j"],[103,21,125,21],[103,24,125,24],[103,25,125,25],[103,26,125,26],[103,29,125,29],[103,30,125,30],[103,31,125,32],[104,10,126,8],[104,11,126,9],[105,8,127,6],[106,6,128,4],[107,4,129,2],[108,4,131,2],[108,11,131,9,"dp"],[108,13,131,11],[108,14,131,12,"m"],[108,15,131,13],[108,16,131,14],[108,17,131,15,"n"],[108,18,131,16],[108,19,131,17],[109,2,132,0],[111,2,134,0],[112,0,135,0],[113,0,136,0],[114,2,137,7],[114,11,137,16,"checkWordCloudAnswer"],[114,31,137,36,"checkWordCloudAnswer"],[114,32,138,2,"processedQuestion"],[114,49,138,39],[114,51,139,2,"userOrder"],[114,60,139,21],[114,62,145,2],[115,4,146,2],[115,10,146,8,"correctWords"],[115,22,146,20],[115,25,146,23,"processedQuestion"],[115,42,146,40],[115,43,146,41,"correctOrder"],[115,55,146,53],[117,4,148,2],[118,4,149,2],[118,10,149,8,"exactMatch"],[118,20,149,18],[118,23,149,21,"userOrder"],[118,32,149,30],[118,33,149,31,"length"],[118,39,149,37],[118,44,149,42,"correctWords"],[118,56,149,54],[118,57,149,55,"length"],[118,63,149,61],[118,67,150,4,"userOrder"],[118,76,150,13],[118,77,150,14,"every"],[118,82,150,19],[118,83,150,20],[118,84,150,21,"word"],[118,88,150,25],[118,90,150,27,"index"],[118,95,150,32],[118,100,151,6,"word"],[118,104,151,10],[118,105,151,11,"toLowerCase"],[118,116,151,22],[118,117,151,23],[118,118,151,24],[118,123,151,29,"correctWords"],[118,135,151,41],[118,136,151,42,"index"],[118,141,151,47],[118,142,151,48],[118,143,151,49,"toLowerCase"],[118,154,151,60],[118,155,151,61],[118,156,152,4],[118,157,152,5],[120,4,154,2],[121,4,155,2],[122,4,156,2],[122,10,156,8,"editDistance"],[122,22,156,20],[122,25,156,23,"calculateEditDistance"],[122,46,156,44],[122,47,156,45,"userOrder"],[122,56,156,54],[122,58,156,56,"correctWords"],[122,70,156,68],[122,71,156,69],[123,4,157,2],[123,10,157,8,"maxLength"],[123,19,157,17],[123,22,157,20,"Math"],[123,26,157,24],[123,27,157,25,"max"],[123,30,157,28],[123,31,157,29,"userOrder"],[123,40,157,38],[123,41,157,39,"length"],[123,47,157,45],[123,49,157,47,"correctWords"],[123,61,157,59],[123,62,157,60,"length"],[123,68,157,66],[123,69,157,67],[125,4,159,2],[126,4,160,2],[127,4,161,2],[128,4,162,2],[128,10,162,8,"accuracy"],[128,18,162,16],[128,21,162,19,"maxLength"],[128,30,162,28],[128,33,162,31],[128,34,162,32],[128,37,163,7],[128,38,163,8,"maxLength"],[128,47,163,17],[128,50,163,20,"editDistance"],[128,62,163,32],[128,66,163,36,"maxLength"],[128,75,163,45],[128,78,163,49],[128,81,163,52],[128,84,164,6],[128,85,164,7],[130,4,166,2],[131,4,167,2],[131,10,167,8,"basePoints"],[131,20,167,18],[131,23,167,21],[131,25,167,23],[132,4,168,2],[132,10,168,8,"stageMultiplier"],[132,25,168,23],[132,28,168,26,"processedQuestion"],[132,45,168,43],[132,46,168,44,"stage"],[132,51,168,49],[133,4,169,2],[133,10,169,8,"pointsEarned"],[133,22,169,20],[133,25,169,23,"exactMatch"],[133,35,169,33],[133,38,170,6,"Math"],[133,42,170,10],[133,43,170,11,"round"],[133,48,170,16],[133,49,170,17,"basePoints"],[133,59,170,27],[133,62,170,30,"stageMultiplier"],[133,77,170,45],[133,78,170,46],[133,81,171,6],[133,82,171,7],[134,4,173,2],[134,11,173,9],[135,6,174,4,"correct"],[135,13,174,11],[135,15,174,13,"exactMatch"],[135,25,174,23],[136,6,175,4,"accuracy"],[136,14,175,12],[137,6,176,4,"correctOrder"],[137,18,176,16],[137,20,176,18,"correctWords"],[137,32,176,30],[138,6,177,4,"pointsEarned"],[139,4,178,2],[139,5,178,3],[140,2,179,0],[141,0,179,1],[141,3]],"functionMap":{"names":["<global>","getDecoyCount","generateWordCloudDecoys","words.map$argument_0","filter$argument_0","filter.filter$argument_0","candidatePool.sort$argument_0","processWordCloudQuestion","cleanText.split.filter$argument_0","calculateEditDistance","Array.fill.map$argument_0","checkWordCloudAnswer","userOrder.every$argument_0"],"mappings":"AAA;ACiB;CDM;AEK;sCCO,oBD;YEiB,oCF;YGC,yCH;sCIG,yBJ;CFoB;OOK;8CCO,iBD;CPY;ASM;qDCG,0BD;CTsB;OWK;oBCa;8DDC;CX4B"},"hasCjsExports":false},"type":"js/module"}]}